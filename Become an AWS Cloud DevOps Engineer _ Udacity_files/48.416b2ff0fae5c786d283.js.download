(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[48],{

/***/ "../../libs/shared/src/lib/markdown/markdown.component.ngfactory.js":
/*!*******************************************************************************************!*\
  !*** /home/circleci/iridium/libs/shared/src/lib/markdown/markdown.component.ngfactory.js ***!
  \*******************************************************************************************/
/*! exports provided: RenderType_MarkdownComponent, View_MarkdownComponent_0, View_MarkdownComponent_Host_0, MarkdownComponentNgFactory */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "RenderType_MarkdownComponent", function() { return RenderType_MarkdownComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_MarkdownComponent_0", function() { return View_MarkdownComponent_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "View_MarkdownComponent_Host_0", function() { return View_MarkdownComponent_Host_0; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MarkdownComponentNgFactory", function() { return MarkdownComponentNgFactory; });
/* harmony import */ var _markdown_component_scss_shim_ngstyle__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./markdown.component.scss.shim.ngstyle */ "../../libs/shared/src/lib/markdown/markdown.component.scss.shim.ngstyle.js");
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/common */ "../../node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _markdown_component__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./markdown.component */ "../../libs/shared/src/lib/markdown/markdown.component.ts");
/* harmony import */ var ngx_md__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-md */ "../../node_modules/ngx-md/fesm5/ngx-md.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/platform-browser */ "../../node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _markdown_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./markdown.service */ "../../libs/shared/src/lib/markdown/markdown.service.ts");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/router */ "../../node_modules/@angular/router/fesm5/router.js");
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */
/** PURE_IMPORTS_START _markdown.component.scss.shim.ngstyle,_angular_core,_angular_common,_markdown.component,ngx_md,_angular_platform_browser,_markdown.service,_angular_router PURE_IMPORTS_END */
/** PURE_IMPORTS_START _markdown.component.scss.shim.ngstyle,_angular_core,_angular_common,_markdown.component,ngx_md,_angular_platform_browser,_markdown.service,_angular_router PURE_IMPORTS_END */








var styles_MarkdownComponent = [_markdown_component_scss_shim_ngstyle__WEBPACK_IMPORTED_MODULE_0__["styles"]];
var RenderType_MarkdownComponent = /*@__PURE__*/ /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵcrt"]({ encapsulation: 0, styles: styles_MarkdownComponent, data: {} });

function View_MarkdownComponent_1(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](0, 0, null, null, 2, "div", [], [[8, "innerHTML", 1]], null, null, null, null)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](1, 278528, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgClass"], [_angular_core__WEBPACK_IMPORTED_MODULE_1__["IterableDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["KeyValueDiffers"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["ElementRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["Renderer2"]], { ngClass: [0, "ngClass"] }, null), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵpod"](2, { "inherit-color": 0 })], function (_ck, _v) { var _co = _v.component; var currVal_1 = _ck(_v, 2, 0, _co.inheritFontColor); _ck(_v, 1, 0, currVal_1); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.resultHTML; _ck(_v, 0, 0, currVal_0); }); }
function View_MarkdownComponent_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵand"](16777216, null, null, 1, null, View_MarkdownComponent_1)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](1, 16384, null, 0, _angular_common__WEBPACK_IMPORTED_MODULE_2__["NgIf"], [_angular_core__WEBPACK_IMPORTED_MODULE_1__["ViewContainerRef"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["TemplateRef"]], { ngIf: [0, "ngIf"] }, null)], function (_ck, _v) { var _co = _v.component; var currVal_0 = _co.resultHTML; _ck(_v, 1, 0, currVal_0); }, null); }
function View_MarkdownComponent_Host_0(_l) { return _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵvid"](0, [(_l()(), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵeld"](0, 0, null, null, 1, "ir-markdown", [], null, null, null, View_MarkdownComponent_0, RenderType_MarkdownComponent)), _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵdid"](1, 4308992, null, 0, _markdown_component__WEBPACK_IMPORTED_MODULE_3__["MarkdownComponent"], [ngx_md__WEBPACK_IMPORTED_MODULE_4__["NgxMdService"], _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__["DomSanitizer"], _markdown_service__WEBPACK_IMPORTED_MODULE_6__["MarkdownCacheService"], _angular_router__WEBPACK_IMPORTED_MODULE_7__["Router"], _angular_core__WEBPACK_IMPORTED_MODULE_1__["PLATFORM_ID"]], null, null)], function (_ck, _v) { _ck(_v, 1, 0); }, null); }
var MarkdownComponentNgFactory = /*@__PURE__*/ /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵccf"]("ir-markdown", _markdown_component__WEBPACK_IMPORTED_MODULE_3__["MarkdownComponent"], View_MarkdownComponent_Host_0, { inheritFontColor: "inheritFontColor", contentAPI: "contentAPI", path: "path", data: "data" }, {}, []);



/***/ }),

/***/ "../../libs/shared/src/lib/markdown/markdown.component.scss.shim.ngstyle.js":
/*!***************************************************************************************************!*\
  !*** /home/circleci/iridium/libs/shared/src/lib/markdown/markdown.component.scss.shim.ngstyle.js ***!
  \***************************************************************************************************/
/*! exports provided: styles */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "styles", function() { return styles; });
/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
/** PURE_IMPORTS_START  PURE_IMPORTS_END */
var styles = ["html[_ngcontent-%COMP%] {\n  box-sizing: border-box; }\n\n*[_ngcontent-%COMP%], *[_ngcontent-%COMP%]::after, *[_ngcontent-%COMP%]::before {\n  box-sizing: inherit; }\n\n\n\nhtml.wf-loading[_ngcontent-%COMP%]   .tk-font[_ngcontent-%COMP%] {\n  visibility: hidden; }\n\nhtml.wf-active[_ngcontent-%COMP%]   .tk-font[_ngcontent-%COMP%] {\n  visibility: initial; }\n\n\n\n.tk-font-balboa[_ngcontent-%COMP%] {\n  font-family: balboa, 'Open Sans', sans-serif; }\n\n.tk-font-balboa-condensed[_ngcontent-%COMP%] {\n  font-family: balboa-extra-condensed, 'Open Sans', sans-serif; }\n\n.invisible[_ngcontent-%COMP%] {\n  visibility: hidden !important; }\n\n.hide[_ngcontent-%COMP%] {\n  display: none !important; }\n\n.show[_ngcontent-%COMP%] {\n  display: block !important; }\n\n.sr-only[_ngcontent-%COMP%] {\n  height: 1px;\n  width: 1px;\n  overflow: hidden;\n  position: absolute !important;\n  clip: rect(1px, 1px, 1px, 1px); }\n\n.hidden-xs-up[_ngcontent-%COMP%] {\n  display: none !important; }\n\n@media (max-width: 479px) {\n  .hidden-xs-down[_ngcontent-%COMP%] {\n    display: none !important; } }\n\n@media (min-width: 480px) {\n  .hidden-sm-up[_ngcontent-%COMP%] {\n    display: none !important; } }\n\n@media (max-width: 767px) {\n  .hidden-sm-down[_ngcontent-%COMP%] {\n    display: none !important; } }\n\n@media (min-width: 768px) {\n  .hidden-md-up[_ngcontent-%COMP%] {\n    display: none !important; } }\n\n@media (max-width: 991px) {\n  .hidden-md-down[_ngcontent-%COMP%] {\n    display: none !important; } }\n\n@media (min-width: 992px) {\n  .hidden-lg-up[_ngcontent-%COMP%] {\n    display: none !important; } }\n\n@media (max-width: 1179px) {\n  .hidden-lg-down[_ngcontent-%COMP%] {\n    display: none !important; } }\n\n@media (min-width: 1180px) {\n  .hidden-xl-up[_ngcontent-%COMP%] {\n    display: none !important; } }\n\n.hidden-xl-down[_ngcontent-%COMP%] {\n  display: none !important; }\n\n.visible-print-block[_ngcontent-%COMP%] {\n  display: none !important; }\n\n@media print {\n    .visible-print-block[_ngcontent-%COMP%] {\n      display: block !important; } }\n\n.visible-print-inline[_ngcontent-%COMP%] {\n  display: none !important; }\n\n@media print {\n    .visible-print-inline[_ngcontent-%COMP%] {\n      display: inline !important; } }\n\n.visible-print-inline-block[_ngcontent-%COMP%] {\n  display: none !important; }\n\n@media print {\n    .visible-print-inline-block[_ngcontent-%COMP%] {\n      display: inline-block !important; } }\n\n@media print {\n  .hidden-print[_ngcontent-%COMP%] {\n    display: none !important; } }\n\n.clear[_ngcontent-%COMP%]::after, .clearfix[_ngcontent-%COMP%]::after {\n  clear: both;\n  content: \"\";\n  display: table; }\n\n.pull-right[_ngcontent-%COMP%] {\n  float: right !important; }\n\n.pull-left[_ngcontent-%COMP%] {\n  float: left !important; }\n\n.block[_ngcontent-%COMP%] {\n  display: block; }\n\n.inline[_ngcontent-%COMP%] {\n  display: inline-block; }\n\n.left[_ngcontent-%COMP%] {\n  margin-left: 0 !important; }\n\n.right[_ngcontent-%COMP%] {\n  margin-right: 0 !important; }\n\n.center[_ngcontent-%COMP%] {\n  margin-left: auto;\n  margin-right: auto; }\n\n.center-block[_ngcontent-%COMP%] {\n  display: block;\n  margin-left: auto;\n  margin-right: auto; }\n\n.mb-0[_ngcontent-%COMP%] {\n  margin-bottom: 0 !important; }\n\n.mb-half[_ngcontent-%COMP%] {\n  margin-bottom: 0.75rem !important; }\n\n.mb-1[_ngcontent-%COMP%] {\n  margin-bottom: 0.75rem !important; }\n\n@media screen and (min-width: 48rem) {\n    .mb-1[_ngcontent-%COMP%] {\n      margin-bottom: 1.5rem !important; } }\n\n.mb-2[_ngcontent-%COMP%] {\n  margin-bottom: 1.5rem !important; }\n\n@media screen and (min-width: 48rem) {\n    .mb-2[_ngcontent-%COMP%] {\n      margin-bottom: 3rem !important; } }\n\n.mb-3[_ngcontent-%COMP%] {\n  margin-bottom: 2.25rem !important; }\n\n@media screen and (min-width: 48rem) {\n    .mb-3[_ngcontent-%COMP%] {\n      margin-bottom: 4.5rem !important; } }\n\n.mb-4[_ngcontent-%COMP%] {\n  margin-bottom: 3rem !important; }\n\n@media screen and (min-width: 48rem) {\n    .mb-4[_ngcontent-%COMP%] {\n      margin-bottom: 6rem !important; } }\n\n.mb-5[_ngcontent-%COMP%] {\n  margin-bottom: 3.75rem !important; }\n\n@media screen and (min-width: 48rem) {\n    .mb-5[_ngcontent-%COMP%] {\n      margin-bottom: 7.5rem !important; } }\n\n.mb-6[_ngcontent-%COMP%] {\n  margin-bottom: 4.5rem !important; }\n\n@media screen and (min-width: 48rem) {\n    .mb-6[_ngcontent-%COMP%] {\n      margin-bottom: 9rem !important; } }\n\n.mb-7[_ngcontent-%COMP%] {\n  margin-bottom: 5.25rem !important; }\n\n@media screen and (min-width: 48rem) {\n    .mb-7[_ngcontent-%COMP%] {\n      margin-bottom: 10.5rem !important; } }\n\n.mb-8[_ngcontent-%COMP%] {\n  margin-bottom: 6rem !important; }\n\n@media screen and (min-width: 48rem) {\n    .mb-8[_ngcontent-%COMP%] {\n      margin-bottom: 12rem !important; } }\n\n.mb-9[_ngcontent-%COMP%] {\n  margin-bottom: 6.75rem !important; }\n\n@media screen and (min-width: 48rem) {\n    .mb-9[_ngcontent-%COMP%] {\n      margin-bottom: 13.5rem !important; } }\n\n.mb-10[_ngcontent-%COMP%] {\n  margin-bottom: 7.5rem !important; }\n\n@media screen and (min-width: 48rem) {\n    .mb-10[_ngcontent-%COMP%] {\n      margin-bottom: 15rem !important; } }\n\nhr[_ngcontent-%COMP%] {\n  border: 0;\n  height: 0;\n  margin-top: 0;\n  margin-bottom: 0;\n  max-width: 73.75rem;\n  box-sizing: border-box;\n  border-bottom: 1px solid rgba(255, 255, 255, 0.3);\n  border-top: 1px solid rgba(0, 0, 0, 0.1); }\n\n.bar[_ngcontent-%COMP%] {\n  position: relative; }\n\n.bar--white[_ngcontent-%COMP%]::before {\n    background-color: #fff !important; }\n\n.bar--yellow[_ngcontent-%COMP%]::before {\n    background-color: #ecc81a !important; }\n\n.bar--green[_ngcontent-%COMP%]::before {\n    background-color: #15c26b !important; }\n\n.bar--turquoise[_ngcontent-%COMP%]::before {\n    background-color: #02ccba !important; }\n\n.bar--slate[_ngcontent-%COMP%]::before {\n    background-color: #2e3d49 !important; }\n\n.bar--left[_ngcontent-%COMP%]::before {\n    top: 1.25rem;\n    content: '';\n    left: -0.125rem;\n    width: 0.25rem;\n    height: 2.25rem;\n    position: absolute;\n    background: #02b3e4; }\n\n@media screen and (min-width: 48rem) {\n      .bar--left[_ngcontent-%COMP%]::before {\n        top: 2rem; } }\n\n.bar--top[_ngcontent-%COMP%]::before {\n    left: 0;\n    content: '';\n    top: -0.75rem;\n    width: 3.75rem;\n    height: 0.25rem;\n    position: absolute;\n    background-color: #02b3e4; }\n\n@media screen and (min-width: 48rem) {\n      .bar--top[_ngcontent-%COMP%]::before {\n        top: -1.5rem; } }\n\n.bar--bottom[_ngcontent-%COMP%]::before {\n    left: 0;\n    content: '';\n    width: 3.75rem;\n    height: 0.25rem;\n    bottom: -0.75rem;\n    position: absolute;\n    background-color: #02b3e4; }\n\n@media screen and (min-width: 48rem) {\n      .bar--bottom[_ngcontent-%COMP%]::before {\n        bottom: -0.75rem; } }\n\n.bar--top-pink[_ngcontent-%COMP%]::before {\n    left: 0;\n    content: '';\n    top: -0.75rem;\n    width: 3.75rem;\n    height: 0.25rem;\n    position: absolute;\n    background-color: #ff5483; }\n\n@media screen and (min-width: 48rem) {\n      .bar--top-pink[_ngcontent-%COMP%]::before {\n        top: -1.5rem; } }\n\n.shadow-center[_ngcontent-%COMP%] {\n  box-shadow: 0px 1px 20px 0px rgba(46, 61, 73, 0.2); }\n\n.shadow-right[_ngcontent-%COMP%] {\n  box-shadow: 5px 5px 25px 0px rgba(46, 61, 73, 0.2); }\n\n.bg-white[_ngcontent-%COMP%] {\n  background-color: #fff !important; }\n\n.bg-gray[_ngcontent-%COMP%] {\n  background-color: #fafbfc !important; }\n\n.bg-beige[_ngcontent-%COMP%] {\n  background-color: #f4f4ef !important; }\n\n.bg-slate[_ngcontent-%COMP%] {\n  background-color: #2e3d49 !important; }\n\n.bg-turquoise[_ngcontent-%COMP%] {\n  background-color: #02ccba !important; }\n\n.bg-gradient-primary[_ngcontent-%COMP%] {\n  background-image: linear-gradient(to bottom right, #02ccba, #a951ed); }\n\n.bg-gradient-secondary[_ngcontent-%COMP%] {\n  background-image: linear-gradient(to bottom right, #02b3e4, #02ccba); }\n\n.bg-gradient-tertiary[_ngcontent-%COMP%] {\n  background-image: linear-gradient(to bottom right, #a951ed, #ff5483); }\n\n.bg-gradient-blend[_ngcontent-%COMP%] {\n  background-image: linear-gradient(to bottom right, #F7F7F7, #EAFBFF); }\n\n.beige-dark[_ngcontent-%COMP%] {\n  color: #dfdfd1 !important; }\n\n.beige-medium[_ngcontent-%COMP%] {\n  color: #eaeae0 !important; }\n\n.beige-light[_ngcontent-%COMP%] {\n  color: #f4f4ef !important; }\n\n.blue-dark[_ngcontent-%COMP%] {\n  color: #028bb1 !important; }\n\n.blue[_ngcontent-%COMP%] {\n  color: #02b3e4 !important; }\n\n.blue-light[_ngcontent-%COMP%] {\n  color: #91daee !important; }\n\n.green[_ngcontent-%COMP%] {\n  color: #15c26b !important; }\n\n.magenta[_ngcontent-%COMP%] {\n  color: #ff5483 !important; }\n\n.orange[_ngcontent-%COMP%] {\n  color: #ffa234 !important; }\n\n.red[_ngcontent-%COMP%] {\n  color: #f04546 !important; }\n\n.red-orange[_ngcontent-%COMP%] {\n  color: #f95c3c !important; }\n\n.yellow-dark[_ngcontent-%COMP%] {\n  color: #ffae0c !important; }\n\n.yellow[_ngcontent-%COMP%] {\n  color: #ecc81a !important; }\n\n.purple[_ngcontent-%COMP%] {\n  color: #a951ed !important; }\n\n.silver[_ngcontent-%COMP%] {\n  color: #fafbfc !important; }\n\n.slate-dark[_ngcontent-%COMP%] {\n  color: #1c262f !important; }\n\n.slate[_ngcontent-%COMP%] {\n  color: #2e3d49 !important; }\n\n.turquoise[_ngcontent-%COMP%] {\n  color: #02ccba !important; }\n\n.gray-dark[_ngcontent-%COMP%] {\n  color: #525c65 !important; }\n\n.gray-medium[_ngcontent-%COMP%] {\n  color: #7d97ad !important; }\n\n.gray[_ngcontent-%COMP%] {\n  color: #bcc9d4 !important; }\n\n.gray-light[_ngcontent-%COMP%] {\n  color: #dbe2e8 !important; }\n\n.white[_ngcontent-%COMP%],   .md-banner .h3,   .md-banner .md-banner__description {\n  color: #fff !important; }\n\n.regular[_ngcontent-%COMP%] {\n  font-weight: 400 !important; }\n\n.light[_ngcontent-%COMP%] {\n  font-weight: 300 !important; }\n\n.italic[_ngcontent-%COMP%], em[_ngcontent-%COMP%] {\n  font-style: italic !important; }\n\n.strong[_ngcontent-%COMP%], strong[_ngcontent-%COMP%] {\n  font-weight: 600 !important; }\n\n.text-left[_ngcontent-%COMP%] {\n  text-align: left !important; }\n\n.text-right[_ngcontent-%COMP%] {\n  text-align: right !important; }\n\n.text-center[_ngcontent-%COMP%],   .md-banner .h3 {\n  text-align: center !important; }\n\n.text-justify[_ngcontent-%COMP%] {\n  text-align: justify !important; }\n\n.text-nowrap[_ngcontent-%COMP%] {\n  white-space: nowrap !important; }\n\n.lowercase[_ngcontent-%COMP%] {\n  text-transform: lowercase; }\n\n.uppercase[_ngcontent-%COMP%] {\n  text-transform: uppercase; }\n\n.capitalize[_ngcontent-%COMP%] {\n  text-transform: capitalize; }\n\n.line-through[_ngcontent-%COMP%] {\n  text-decoration: line-through; }\n\n.underline[_ngcontent-%COMP%] {\n  text-decoration: underline; }\n\n.no-margin-top[_ngcontent-%COMP%] {\n  margin-top: 0; }\n\n.no-margin-bottom[_ngcontent-%COMP%] {\n  margin-bottom: 0; }\n\nbutton[_ngcontent-%COMP%], input[type=\"button\"][_ngcontent-%COMP%], input[type=\"reset\"][_ngcontent-%COMP%], input[type=\"submit\"][_ngcontent-%COMP%], .button[_ngcontent-%COMP%], .button--primary[_ngcontent-%COMP%], .button--blue[_ngcontent-%COMP%], .button--secondary[_ngcontent-%COMP%], .button--gray[_ngcontent-%COMP%], .button--outline[_ngcontent-%COMP%],   .md-banner .button, .button--white[_ngcontent-%COMP%], .button--black[_ngcontent-%COMP%], .button--navigation[_ngcontent-%COMP%], .button--turquoise[_ngcontent-%COMP%], .button--purple[_ngcontent-%COMP%], .button--team[_ngcontent-%COMP%], .button--pink[_ngcontent-%COMP%] {\n  display: block;\n  cursor: pointer;\n  -webkit-appearance: none;\n     -moz-appearance: none;\n          appearance: none;\n  -webkit-user-select: none;\n     -moz-user-select: none;\n      -ms-user-select: none;\n          user-select: none;\n  text-align: center;\n  white-space: nowrap;\n  vertical-align: top;\n  text-decoration: none;\n  vertical-align: middle;\n  height: 3rem;\n  padding: 0 0.5rem;\n  text-transform: uppercase;\n  font-size: 16px;\n  font-weight: 600;\n  font-size: 0.8125rem;\n  line-height: 2.625rem;\n  -webkit-font-smoothing: antialiased;\n  border-radius: 0.25rem;\n  letter-spacing: 0.125rem;\n  transition: all 0.3s ease; }\n\n.button--primary[_ngcontent-%COMP%], .button--blue[_ngcontent-%COMP%], .button--secondary[_ngcontent-%COMP%], .button--gray[_ngcontent-%COMP%], .button--outline[_ngcontent-%COMP%],   .md-banner .button, .button--white[_ngcontent-%COMP%], .button--black[_ngcontent-%COMP%], .button--purple[_ngcontent-%COMP%], .button--pink[_ngcontent-%COMP%] {\n  box-shadow: 8px 10px 20px 0px rgba(46, 61, 73, 0.15); }\n\n.button--primary[_ngcontent-%COMP%]:hover, .button--blue[_ngcontent-%COMP%]:hover, .button--secondary[_ngcontent-%COMP%]:hover, .button--gray[_ngcontent-%COMP%]:hover, .button--outline[_ngcontent-%COMP%]:hover,   .md-banner .button:hover, .button--white[_ngcontent-%COMP%]:hover, .button--black[_ngcontent-%COMP%]:hover, .button--purple[_ngcontent-%COMP%]:hover, .button--pink[_ngcontent-%COMP%]:hover {\n    box-shadow: 2px 4px 8px 0px rgba(46, 61, 73, 0.2); }\n\n.button--primary[_ngcontent-%COMP%], .button--blue[_ngcontent-%COMP%] {\n  width: 13.75rem;\n  color: #fff;\n  background-color: #02b3e4;\n  border: 0.125rem solid transparent; }\n\n.button--primary[_ngcontent-%COMP%]:focus, .button--primary.focus[_ngcontent-%COMP%], .button--primary[_ngcontent-%COMP%]:hover, .button--blue[_ngcontent-%COMP%]:focus, .button--blue.focus[_ngcontent-%COMP%], .button--blue[_ngcontent-%COMP%]:hover {\n    outline: none;\n    color: white;\n    border-color: transparent;\n    background-color: #029fcb; }\n\n.button--primary.disabled[_ngcontent-%COMP%], .button--primary[disabled][_ngcontent-%COMP%], fieldset[disabled][_ngcontent-%COMP%]   .button--primary[_ngcontent-%COMP%], .button--blue.disabled[_ngcontent-%COMP%], .button--blue[disabled][_ngcontent-%COMP%], fieldset[disabled][_ngcontent-%COMP%]   .button--blue[_ngcontent-%COMP%] {\n    box-shadow: none;\n    cursor: not-allowed;\n    border-color: #dbe2e8;\n    background-color: #dbe2e8; }\n\n.button--primary.pending[_ngcontent-%COMP%], .button--blue.pending[_ngcontent-%COMP%] {\n    cursor: progress;\n    box-shadow: none; }\n\n.button--primary.pending[_ngcontent-%COMP%]:hover, .button--blue.pending[_ngcontent-%COMP%]:hover {\n      background-color: #02b3e4; }\n\n.button--primary.inline[_ngcontent-%COMP%], .button--blue.inline[_ngcontent-%COMP%] {\n    display: inline-block; }\n\n.button--primary.sm[_ngcontent-%COMP%], .button--blue.sm[_ngcontent-%COMP%] {\n    width: 11.25rem; }\n\n.button--primary.lg[_ngcontent-%COMP%], .button--blue.lg[_ngcontent-%COMP%] {\n    width: 17.5rem; }\n\n@media screen and (max-width: 20rem) {\n      .button--primary.lg[_ngcontent-%COMP%], .button--blue.lg[_ngcontent-%COMP%] {\n        width: 100%; } }\n\n.button--primary.full[_ngcontent-%COMP%], .button--blue.full[_ngcontent-%COMP%] {\n    width: 100%; }\n\n.button--primary[_ngcontent-%COMP%]    > svg[_ngcontent-%COMP%], .button--blue[_ngcontent-%COMP%]    > svg[_ngcontent-%COMP%] {\n    fill: currentcolor; }\n\n.button--secondary[_ngcontent-%COMP%], .button--gray[_ngcontent-%COMP%] {\n  width: 13.75rem;\n  color: #fff;\n  background-color: #7d97ad;\n  border: 0.125rem solid transparent; }\n\n.button--secondary[_ngcontent-%COMP%]:focus, .button--secondary.focus[_ngcontent-%COMP%], .button--secondary[_ngcontent-%COMP%]:hover, .button--gray[_ngcontent-%COMP%]:focus, .button--gray.focus[_ngcontent-%COMP%], .button--gray[_ngcontent-%COMP%]:hover {\n    outline: none;\n    color: white;\n    border-color: transparent;\n    background-color: #6d8aa3; }\n\n.button--secondary.disabled[_ngcontent-%COMP%], .button--secondary[disabled][_ngcontent-%COMP%], fieldset[disabled][_ngcontent-%COMP%]   .button--secondary[_ngcontent-%COMP%], .button--gray.disabled[_ngcontent-%COMP%], .button--gray[disabled][_ngcontent-%COMP%], fieldset[disabled][_ngcontent-%COMP%]   .button--gray[_ngcontent-%COMP%] {\n    box-shadow: none;\n    cursor: not-allowed;\n    border-color: #dbe2e8;\n    background-color: #dbe2e8; }\n\n.button--secondary.pending[_ngcontent-%COMP%], .button--gray.pending[_ngcontent-%COMP%] {\n    cursor: progress;\n    box-shadow: none; }\n\n.button--secondary.pending[_ngcontent-%COMP%]:hover, .button--gray.pending[_ngcontent-%COMP%]:hover {\n      background-color: #7d97ad; }\n\n.button--secondary.inline[_ngcontent-%COMP%], .button--gray.inline[_ngcontent-%COMP%] {\n    display: inline-block; }\n\n.button--secondary.sm[_ngcontent-%COMP%], .button--gray.sm[_ngcontent-%COMP%] {\n    width: 11.25rem; }\n\n.button--secondary.lg[_ngcontent-%COMP%], .button--gray.lg[_ngcontent-%COMP%] {\n    width: 17.5rem; }\n\n@media screen and (max-width: 20rem) {\n      .button--secondary.lg[_ngcontent-%COMP%], .button--gray.lg[_ngcontent-%COMP%] {\n        width: 100%; } }\n\n.button--secondary.full[_ngcontent-%COMP%], .button--gray.full[_ngcontent-%COMP%] {\n    width: 100%; }\n\n.button--secondary[_ngcontent-%COMP%]    > svg[_ngcontent-%COMP%], .button--gray[_ngcontent-%COMP%]    > svg[_ngcontent-%COMP%] {\n    fill: currentcolor; }\n\n.button--outline[_ngcontent-%COMP%],   .md-banner .button {\n  width: 13.75rem;\n  color: #fff;\n  background-color: transparent;\n  border: 0.125rem solid #fff; }\n\n.button--outline[_ngcontent-%COMP%]:focus,   .md-banner .button:focus, .button--outline.focus[_ngcontent-%COMP%],   .md-banner .focus.button, .button--outline[_ngcontent-%COMP%]:hover,   .md-banner .button:hover {\n    outline: none;\n    color: white;\n    border-color: #fff;\n    background-color: rgba(0, 0, 0, 0); }\n\n.button--outline.disabled[_ngcontent-%COMP%],   .md-banner .disabled.button, .button--outline[disabled][_ngcontent-%COMP%],   .md-banner .button[disabled], fieldset[disabled][_ngcontent-%COMP%]   .button--outline[_ngcontent-%COMP%], fieldset[disabled][_ngcontent-%COMP%]     .md-banner .button,   .md-banner fieldset[disabled] .button {\n    box-shadow: none;\n    cursor: not-allowed;\n    border-color: #dbe2e8;\n    background-color: #dbe2e8; }\n\n.button--outline.pending[_ngcontent-%COMP%],   .md-banner .pending.button {\n    cursor: progress;\n    box-shadow: none; }\n\n.button--outline.pending[_ngcontent-%COMP%]:hover,   .md-banner .pending.button:hover {\n      background-color: transparent; }\n\n.button--outline.inline[_ngcontent-%COMP%],   .md-banner .inline.button {\n    display: inline-block; }\n\n.button--outline.sm[_ngcontent-%COMP%],   .md-banner .sm.button {\n    width: 11.25rem; }\n\n.button--outline.lg[_ngcontent-%COMP%],   .md-banner .lg.button {\n    width: 17.5rem; }\n\n@media screen and (max-width: 20rem) {\n      .button--outline.lg[_ngcontent-%COMP%],   .md-banner .lg.button {\n        width: 100%; } }\n\n.button--outline.full[_ngcontent-%COMP%],   .md-banner .full.button {\n    width: 100%; }\n\n.button--outline[_ngcontent-%COMP%]    > svg[_ngcontent-%COMP%],   .md-banner .button > svg {\n    fill: currentcolor; }\n\n.button--white[_ngcontent-%COMP%] {\n  width: 13.75rem;\n  color: #02b3e4;\n  background-color: #fff;\n  border: 0.125rem solid transparent; }\n\n.button--white[_ngcontent-%COMP%]:focus, .button--white.focus[_ngcontent-%COMP%], .button--white[_ngcontent-%COMP%]:hover {\n    outline: none;\n    color: #1cccfd;\n    border-color: transparent;\n    background-color: #f2f2f2; }\n\n.button--white.disabled[_ngcontent-%COMP%], .button--white[disabled][_ngcontent-%COMP%], fieldset[disabled][_ngcontent-%COMP%]   .button--white[_ngcontent-%COMP%] {\n    box-shadow: none;\n    cursor: not-allowed;\n    border-color: #dbe2e8;\n    background-color: #dbe2e8; }\n\n.button--white.pending[_ngcontent-%COMP%] {\n    cursor: progress;\n    box-shadow: none; }\n\n.button--white.pending[_ngcontent-%COMP%]:hover {\n      background-color: #fff; }\n\n.button--white.inline[_ngcontent-%COMP%] {\n    display: inline-block; }\n\n.button--white.sm[_ngcontent-%COMP%] {\n    width: 11.25rem; }\n\n.button--white.lg[_ngcontent-%COMP%] {\n    width: 17.5rem; }\n\n@media screen and (max-width: 20rem) {\n      .button--white.lg[_ngcontent-%COMP%] {\n        width: 100%; } }\n\n.button--white.full[_ngcontent-%COMP%] {\n    width: 100%; }\n\n.button--white[_ngcontent-%COMP%]    > svg[_ngcontent-%COMP%] {\n    fill: currentcolor; }\n\n.button--black[_ngcontent-%COMP%] {\n  width: 13.75rem;\n  color: #fff;\n  background-color: #000;\n  border: 0.125rem solid transparent; }\n\n.button--black[_ngcontent-%COMP%]:focus, .button--black.focus[_ngcontent-%COMP%], .button--black[_ngcontent-%COMP%]:hover {\n    outline: none;\n    color: white;\n    border-color: transparent;\n    background-color: black; }\n\n.button--black.disabled[_ngcontent-%COMP%], .button--black[disabled][_ngcontent-%COMP%], fieldset[disabled][_ngcontent-%COMP%]   .button--black[_ngcontent-%COMP%] {\n    box-shadow: none;\n    cursor: not-allowed;\n    border-color: #dbe2e8;\n    background-color: #dbe2e8; }\n\n.button--black.pending[_ngcontent-%COMP%] {\n    cursor: progress;\n    box-shadow: none; }\n\n.button--black.pending[_ngcontent-%COMP%]:hover {\n      background-color: #000; }\n\n.button--black.inline[_ngcontent-%COMP%] {\n    display: inline-block; }\n\n.button--black.sm[_ngcontent-%COMP%] {\n    width: 11.25rem; }\n\n.button--black.lg[_ngcontent-%COMP%] {\n    width: 17.5rem; }\n\n@media screen and (max-width: 20rem) {\n      .button--black.lg[_ngcontent-%COMP%] {\n        width: 100%; } }\n\n.button--black.full[_ngcontent-%COMP%] {\n    width: 100%; }\n\n.button--black[_ngcontent-%COMP%]    > svg[_ngcontent-%COMP%] {\n    fill: currentcolor; }\n\n.button--navigation[_ngcontent-%COMP%] {\n  color: #fff;\n  background-color: transparent;\n  border: 0.125rem solid transparent; }\n\n.button--navigation[_ngcontent-%COMP%]:focus, .button--navigation.focus[_ngcontent-%COMP%], .button--navigation[_ngcontent-%COMP%]:hover {\n    outline: none;\n    color: white;\n    border-color: transparent;\n    background-color: rgba(0, 0, 0, 0); }\n\n.button--navigation.disabled[_ngcontent-%COMP%], .button--navigation[disabled][_ngcontent-%COMP%], fieldset[disabled][_ngcontent-%COMP%]   .button--navigation[_ngcontent-%COMP%] {\n    box-shadow: none;\n    cursor: not-allowed;\n    border-color: #dbe2e8;\n    background-color: #dbe2e8; }\n\n.button--navigation.pending[_ngcontent-%COMP%] {\n    cursor: progress;\n    box-shadow: none; }\n\n.button--navigation.pending[_ngcontent-%COMP%]:hover {\n      background-color: transparent; }\n\n.button--navigation.inline[_ngcontent-%COMP%] {\n    display: inline-block; }\n\n.button--navigation.sm[_ngcontent-%COMP%] {\n    width: 11.25rem; }\n\n.button--navigation.lg[_ngcontent-%COMP%] {\n    width: 17.5rem; }\n\n@media screen and (max-width: 20rem) {\n      .button--navigation.lg[_ngcontent-%COMP%] {\n        width: 100%; } }\n\n.button--navigation.full[_ngcontent-%COMP%] {\n    width: 100%; }\n\n.button--navigation[_ngcontent-%COMP%]    > svg[_ngcontent-%COMP%] {\n    fill: currentcolor; }\n\n.button--turquoise[_ngcontent-%COMP%] {\n  color: #fff;\n  background-color: #02ccba;\n  border: 0.125rem solid transparent; }\n\n.button--turquoise[_ngcontent-%COMP%]:focus, .button--turquoise.focus[_ngcontent-%COMP%], .button--turquoise[_ngcontent-%COMP%]:hover {\n    outline: none;\n    color: white;\n    border-color: transparent;\n    background-color: #02b3a3; }\n\n.button--turquoise.disabled[_ngcontent-%COMP%], .button--turquoise[disabled][_ngcontent-%COMP%], fieldset[disabled][_ngcontent-%COMP%]   .button--turquoise[_ngcontent-%COMP%] {\n    box-shadow: none;\n    cursor: not-allowed;\n    border-color: #dbe2e8;\n    background-color: #dbe2e8; }\n\n.button--turquoise.pending[_ngcontent-%COMP%] {\n    cursor: progress;\n    box-shadow: none; }\n\n.button--turquoise.pending[_ngcontent-%COMP%]:hover {\n      background-color: #02ccba; }\n\n.button--turquoise.inline[_ngcontent-%COMP%] {\n    display: inline-block; }\n\n.button--turquoise.sm[_ngcontent-%COMP%] {\n    width: 11.25rem; }\n\n.button--turquoise.lg[_ngcontent-%COMP%] {\n    width: 17.5rem; }\n\n@media screen and (max-width: 20rem) {\n      .button--turquoise.lg[_ngcontent-%COMP%] {\n        width: 100%; } }\n\n.button--turquoise.full[_ngcontent-%COMP%] {\n    width: 100%; }\n\n.button--turquoise[_ngcontent-%COMP%]    > svg[_ngcontent-%COMP%] {\n    fill: currentcolor; }\n\n.button--purple[_ngcontent-%COMP%] {\n  width: 13.75rem;\n  color: #fff;\n  background-color: #a951ed;\n  border: 0.125rem solid transparent; }\n\n.button--purple[_ngcontent-%COMP%]:focus, .button--purple.focus[_ngcontent-%COMP%], .button--purple[_ngcontent-%COMP%]:hover {\n    outline: none;\n    color: white;\n    border-color: transparent;\n    background-color: #9e3aeb; }\n\n.button--purple.disabled[_ngcontent-%COMP%], .button--purple[disabled][_ngcontent-%COMP%], fieldset[disabled][_ngcontent-%COMP%]   .button--purple[_ngcontent-%COMP%] {\n    box-shadow: none;\n    cursor: not-allowed;\n    border-color: #dbe2e8;\n    background-color: #dbe2e8; }\n\n.button--purple.pending[_ngcontent-%COMP%] {\n    cursor: progress;\n    box-shadow: none; }\n\n.button--purple.pending[_ngcontent-%COMP%]:hover {\n      background-color: #a951ed; }\n\n.button--purple.inline[_ngcontent-%COMP%] {\n    display: inline-block; }\n\n.button--purple.sm[_ngcontent-%COMP%] {\n    width: 11.25rem; }\n\n.button--purple.lg[_ngcontent-%COMP%] {\n    width: 17.5rem; }\n\n@media screen and (max-width: 20rem) {\n      .button--purple.lg[_ngcontent-%COMP%] {\n        width: 100%; } }\n\n.button--purple.full[_ngcontent-%COMP%] {\n    width: 100%; }\n\n.button--purple[_ngcontent-%COMP%]    > svg[_ngcontent-%COMP%] {\n    fill: currentcolor; }\n\n.button--team[_ngcontent-%COMP%] {\n  color: #2e3d49;\n  background-color: transparent;\n  border: 0.125rem solid transparent; }\n\n.button--team[_ngcontent-%COMP%]:focus, .button--team.focus[_ngcontent-%COMP%], .button--team[_ngcontent-%COMP%]:hover {\n    outline: none;\n    color: #425768;\n    border-color: transparent;\n    background-color: rgba(0, 0, 0, 0); }\n\n.button--team.disabled[_ngcontent-%COMP%], .button--team[disabled][_ngcontent-%COMP%], fieldset[disabled][_ngcontent-%COMP%]   .button--team[_ngcontent-%COMP%] {\n    box-shadow: none;\n    cursor: not-allowed;\n    border-color: #dbe2e8;\n    background-color: #dbe2e8; }\n\n.button--team.pending[_ngcontent-%COMP%] {\n    cursor: progress;\n    box-shadow: none; }\n\n.button--team.pending[_ngcontent-%COMP%]:hover {\n      background-color: transparent; }\n\n.button--team.inline[_ngcontent-%COMP%] {\n    display: inline-block; }\n\n.button--team.sm[_ngcontent-%COMP%] {\n    width: 11.25rem; }\n\n.button--team.lg[_ngcontent-%COMP%] {\n    width: 17.5rem; }\n\n@media screen and (max-width: 20rem) {\n      .button--team.lg[_ngcontent-%COMP%] {\n        width: 100%; } }\n\n.button--team.full[_ngcontent-%COMP%] {\n    width: 100%; }\n\n.button--team[_ngcontent-%COMP%]    > svg[_ngcontent-%COMP%] {\n    fill: currentcolor; }\n\n.button--pink[_ngcontent-%COMP%] {\n  width: 13.75rem;\n  color: #fff;\n  background-color: #ff5483;\n  border: 0.125rem solid transparent; }\n\n.button--pink[_ngcontent-%COMP%]:focus, .button--pink.focus[_ngcontent-%COMP%], .button--pink[_ngcontent-%COMP%]:hover {\n    outline: none;\n    color: white;\n    border-color: transparent;\n    background-color: #ff3b71; }\n\n.button--pink.disabled[_ngcontent-%COMP%], .button--pink[disabled][_ngcontent-%COMP%], fieldset[disabled][_ngcontent-%COMP%]   .button--pink[_ngcontent-%COMP%] {\n    box-shadow: none;\n    cursor: not-allowed;\n    border-color: #dbe2e8;\n    background-color: #dbe2e8; }\n\n.button--pink.pending[_ngcontent-%COMP%] {\n    cursor: progress;\n    box-shadow: none; }\n\n.button--pink.pending[_ngcontent-%COMP%]:hover {\n      background-color: #ff5483; }\n\n.button--pink.inline[_ngcontent-%COMP%] {\n    display: inline-block; }\n\n.button--pink.sm[_ngcontent-%COMP%] {\n    width: 11.25rem; }\n\n.button--pink.lg[_ngcontent-%COMP%] {\n    width: 17.5rem; }\n\n@media screen and (max-width: 20rem) {\n      .button--pink.lg[_ngcontent-%COMP%] {\n        width: 100%; } }\n\n.button--pink.full[_ngcontent-%COMP%] {\n    width: 100%; }\n\n.button--pink[_ngcontent-%COMP%]    > svg[_ngcontent-%COMP%] {\n    fill: currentcolor; }\n\n  .md-banner {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  border-bottom: none;\n  padding: 2rem 1rem; }\n\n  .md-banner .h3 {\n    margin: 0;\n    font-weight: bold; }\n\n  .md-banner .md-banner__description {\n    margin-top: 0.5rem; }\n\n  .md-banner .button {\n    width: auto;\n    margin-top: 2rem; }\n\n.inherit-color[_ngcontent-%COMP%]     {\n  color: inherit !important; }\n\n.inherit-color[_ngcontent-%COMP%]     h1, .inherit-color[_ngcontent-%COMP%]     h2, .inherit-color[_ngcontent-%COMP%]     h3, .inherit-color[_ngcontent-%COMP%]     h4, .inherit-color[_ngcontent-%COMP%]     h5, .inherit-color[_ngcontent-%COMP%]     h6, .inherit-color[_ngcontent-%COMP%]     p {\n    color: inherit !important; }"];



/***/ }),

/***/ "../../libs/shared/src/lib/markdown/markdown.component.ts":
/*!*********************************************************************************!*\
  !*** /home/circleci/iridium/libs/shared/src/lib/markdown/markdown.component.ts ***!
  \*********************************************************************************/
/*! exports provided: MarkdownComponent */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "MarkdownComponent", function() { return MarkdownComponent; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common */ "../../node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/router */ "../../node_modules/@angular/router/fesm5/router.js");
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/platform-browser */ "../../node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var ngx_md__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ngx-md */ "../../node_modules/ngx-md/fesm5/ngx-md.js");
/* harmony import */ var _markdown_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./markdown.service */ "../../libs/shared/src/lib/markdown/markdown.service.ts");
// angular




// libs

// iridium

var MarkdownComponent = /** @class */ /*@__PURE__*/ (function () {
    function MarkdownComponent(mdService, sanitizer, mdCacheService, router, platformId) {
        this.mdService = mdService;
        this.sanitizer = sanitizer;
        this.mdCacheService = mdCacheService;
        this.router = router;
        this.platformId = platformId;
    }
    MarkdownComponent.prototype.ngOnInit = function () { };
    Object.defineProperty(MarkdownComponent.prototype, "path", {
        set: function (value) {
            this._path = Object(_angular_common__WEBPACK_IMPORTED_MODULE_1__["isPlatformBrowser"])(this.platformId)
                ? value
                : this.contentAPI + value;
            this.onPathChange();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(MarkdownComponent.prototype, "data", {
        set: function (value) {
            this._data = value;
            this.onDataChange(value);
        },
        enumerable: true,
        configurable: true
    });
    // on input
    MarkdownComponent.prototype.onDataChange = function (data) {
        if (data) {
            this.resultHTML = this.sanitizer.bypassSecurityTrustHtml(this.mdService.compile(data, false));
        }
        else {
            this.resultHTML = '';
        }
    };
    /**
     *  After view init
     */
    MarkdownComponent.prototype.ngAfterViewInit = function () {
        if (this._path) {
            this.onPathChange();
        }
        else if (!this._data) {
            this.processRaw();
        }
    };
    MarkdownComponent.prototype.processRaw = function () {
        this._md = this.prepare(this.resultHTML);
        this.resultHTML = this.sanitizer.bypassSecurityTrustHtml(this.mdService.compile(this._md, false));
    };
    /**
     * get remote content;
     */
    MarkdownComponent.prototype.onPathChange = function () {
        var _this = this;
        this._ext =
            this._path &&
                this._path
                    .split('.')
                    .splice(-1)
                    .join();
        this.mdCacheService
            .fetchMarkdownAndCache(this._path, this.router.url)
            .subscribe(function (data) {
            _this._md =
                _this._ext !== 'md' ? '```' + _this._ext + '\n' + data + '\n```' : data;
            _this.resultHTML = _this.sanitizer.bypassSecurityTrustHtml(_this.mdService.compile(_this.prepare(_this._md), false));
        }, this.handleError);
    };
    /**
     * catch http error
     */
    MarkdownComponent.prototype.handleError = function (error) {
        console.error('MarkdownComponent: An error occurred', error); // for demo purposes only
        return Promise.reject(error.message || error);
    };
    /**
     * Prepare string
     */
    MarkdownComponent.prototype.prepare = function (raw) {
        var _this = this;
        if (!raw) {
            return '';
        }
        if (this._ext === 'md' || !this._path) {
            var isCodeBlock_1 = false;
            return raw
                .split('\n')
                .map(function (line) {
                if (_this.trimLeft(line).substring(0, 3) === '```') {
                    isCodeBlock_1 = !isCodeBlock_1;
                }
                return isCodeBlock_1 ? line : line.trim();
            })
                .join('\n');
        }
        return raw.replace(/\"/g, "'");
    };
    /**
     * Trim left whitespace
     */
    MarkdownComponent.prototype.trimLeft = function (line) {
        return line.replace(/^\s+|\s+$/g, '');
    };
    return MarkdownComponent;
}());



/***/ }),

/***/ "../../node_modules/marked/lib/marked.js":
/*!****************************************************************!*\
  !*** /home/circleci/iridium/node_modules/marked/lib/marked.js ***!
  \****************************************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

/**
 * marked - a markdown parser
 * Copyright (c) 2011-2018, Christopher Jeffrey. (MIT Licensed)
 * https://github.com/markedjs/marked
 */

;(function(root) {
'use strict';

/**
 * Block-Level Grammar
 */

var block = {
  newline: /^\n+/,
  code: /^( {4}[^\n]+\n*)+/,
  fences: noop,
  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\* *){3,})(?:\n+|$)/,
  heading: /^ *(#{1,6}) *([^\n]+?) *(?:#+ *)?(?:\n+|$)/,
  nptable: noop,
  blockquote: /^( {0,3}> ?(paragraph|[^\n]*)(?:\n|$))+/,
  list: /^( *)(bull) [\s\S]+?(?:hr|def|\n{2,}(?! )(?!\1bull )\n*|\s*$)/,
  html: '^ {0,3}(?:' // optional indentation
    + '<(script|pre|style)[\\s>][\\s\\S]*?(?:</\\1>[^\\n]*\\n+|$)' // (1)
    + '|comment[^\\n]*(\\n+|$)' // (2)
    + '|<\\?[\\s\\S]*?\\?>\\n*' // (3)
    + '|<![A-Z][\\s\\S]*?>\\n*' // (4)
    + '|<!\\[CDATA\\[[\\s\\S]*?\\]\\]>\\n*' // (5)
    + '|</?(tag)(?: +|\\n|/?>)[\\s\\S]*?(?:\\n{2,}|$)' // (6)
    + '|<(?!script|pre|style)([a-z][\\w-]*)(?:attribute)*? */?>(?=\\h*\\n)[\\s\\S]*?(?:\\n{2,}|$)' // (7) open tag
    + '|</(?!script|pre|style)[a-z][\\w-]*\\s*>(?=\\h*\\n)[\\s\\S]*?(?:\\n{2,}|$)' // (7) closing tag
    + ')',
  def: /^ {0,3}\[(label)\]: *\n? *<?([^\s>]+)>?(?:(?: +\n? *| *\n *)(title))? *(?:\n+|$)/,
  table: noop,
  lheading: /^([^\n]+)\n *(=|-){2,} *(?:\n+|$)/,
  paragraph: /^([^\n]+(?:\n(?!hr|heading|lheading| {0,3}>|<\/?(?:tag)(?: +|\n|\/?>)|<(?:script|pre|style|!--))[^\n]+)*)/,
  text: /^[^\n]+/
};

block._label = /(?!\s*\])(?:\\[\[\]]|[^\[\]])+/;
block._title = /(?:"(?:\\"?|[^"\\])*"|'[^'\n]*(?:\n[^'\n]+)*\n?'|\([^()]*\))/;
block.def = edit(block.def)
  .replace('label', block._label)
  .replace('title', block._title)
  .getRegex();

block.bullet = /(?:[*+-]|\d+\.)/;
block.item = /^( *)(bull) [^\n]*(?:\n(?!\1bull )[^\n]*)*/;
block.item = edit(block.item, 'gm')
  .replace(/bull/g, block.bullet)
  .getRegex();

block.list = edit(block.list)
  .replace(/bull/g, block.bullet)
  .replace('hr', '\\n+(?=\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$))')
  .replace('def', '\\n+(?=' + block.def.source + ')')
  .getRegex();

block._tag = 'address|article|aside|base|basefont|blockquote|body|caption'
  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'
  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'
  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'
  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'
  + '|track|ul';
block._comment = /<!--(?!-?>)[\s\S]*?-->/;
block.html = edit(block.html, 'i')
  .replace('comment', block._comment)
  .replace('tag', block._tag)
  .replace('attribute', / +[a-zA-Z:_][\w.:-]*(?: *= *"[^"\n]*"| *= *'[^'\n]*'| *= *[^\s"'=<>`]+)?/)
  .getRegex();

block.paragraph = edit(block.paragraph)
  .replace('hr', block.hr)
  .replace('heading', block.heading)
  .replace('lheading', block.lheading)
  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks
  .getRegex();

block.blockquote = edit(block.blockquote)
  .replace('paragraph', block.paragraph)
  .getRegex();

/**
 * Normal Block Grammar
 */

block.normal = merge({}, block);

/**
 * GFM Block Grammar
 */

block.gfm = merge({}, block.normal, {
  fences: /^ *(`{3,}|~{3,})[ \.]*(\S+)? *\n([\s\S]*?)\n? *\1 *(?:\n+|$)/,
  paragraph: /^/,
  heading: /^ *(#{1,6}) +([^\n]+?) *#* *(?:\n+|$)/
});

block.gfm.paragraph = edit(block.paragraph)
  .replace('(?!', '(?!'
    + block.gfm.fences.source.replace('\\1', '\\2') + '|'
    + block.list.source.replace('\\1', '\\3') + '|')
  .getRegex();

/**
 * GFM + Tables Block Grammar
 */

block.tables = merge({}, block.gfm, {
  nptable: /^ *([^|\n ].*\|.*)\n *([-:]+ *\|[-| :]*)(?:\n((?:.*[^>\n ].*(?:\n|$))*)\n*|$)/,
  table: /^ *\|(.+)\n *\|?( *[-:]+[-| :]*)(?:\n((?: *[^>\n ].*(?:\n|$))*)\n*|$)/
});

/**
 * Pedantic grammar
 */

block.pedantic = merge({}, block.normal, {
  html: edit(
    '^ *(?:comment *(?:\\n|\\s*$)'
    + '|<(tag)[\\s\\S]+?</\\1> *(?:\\n{2,}|\\s*$)' // closed tag
    + '|<tag(?:"[^"]*"|\'[^\']*\'|\\s[^\'"/>\\s]*)*?/?> *(?:\\n{2,}|\\s*$))')
    .replace('comment', block._comment)
    .replace(/tag/g, '(?!(?:'
      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'
      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'
      + '\\b)\\w+(?!:|[^\\w\\s@]*@)\\b')
    .getRegex(),
  def: /^ *\[([^\]]+)\]: *<?([^\s>]+)>?(?: +(["(][^\n]+[")]))? *(?:\n+|$)/
});

/**
 * Block Lexer
 */

function Lexer(options) {
  this.tokens = [];
  this.tokens.links = Object.create(null);
  this.options = options || marked.defaults;
  this.rules = block.normal;

  if (this.options.pedantic) {
    this.rules = block.pedantic;
  } else if (this.options.gfm) {
    if (this.options.tables) {
      this.rules = block.tables;
    } else {
      this.rules = block.gfm;
    }
  }
}

/**
 * Expose Block Rules
 */

Lexer.rules = block;

/**
 * Static Lex Method
 */

Lexer.lex = function(src, options) {
  var lexer = new Lexer(options);
  return lexer.lex(src);
};

/**
 * Preprocessing
 */

Lexer.prototype.lex = function(src) {
  src = src
    .replace(/\r\n|\r/g, '\n')
    .replace(/\t/g, '    ')
    .replace(/\u00a0/g, ' ')
    .replace(/\u2424/g, '\n');

  return this.token(src, true);
};

/**
 * Lexing
 */

Lexer.prototype.token = function(src, top) {
  src = src.replace(/^ +$/gm, '');
  var next,
      loose,
      cap,
      bull,
      b,
      item,
      listStart,
      listItems,
      t,
      space,
      i,
      tag,
      l,
      isordered,
      istask,
      ischecked;

  while (src) {
    // newline
    if (cap = this.rules.newline.exec(src)) {
      src = src.substring(cap[0].length);
      if (cap[0].length > 1) {
        this.tokens.push({
          type: 'space'
        });
      }
    }

    // code
    if (cap = this.rules.code.exec(src)) {
      src = src.substring(cap[0].length);
      cap = cap[0].replace(/^ {4}/gm, '');
      this.tokens.push({
        type: 'code',
        text: !this.options.pedantic
          ? rtrim(cap, '\n')
          : cap
      });
      continue;
    }

    // fences (gfm)
    if (cap = this.rules.fences.exec(src)) {
      src = src.substring(cap[0].length);
      this.tokens.push({
        type: 'code',
        lang: cap[2],
        text: cap[3] || ''
      });
      continue;
    }

    // heading
    if (cap = this.rules.heading.exec(src)) {
      src = src.substring(cap[0].length);
      this.tokens.push({
        type: 'heading',
        depth: cap[1].length,
        text: cap[2]
      });
      continue;
    }

    // table no leading pipe (gfm)
    if (top && (cap = this.rules.nptable.exec(src))) {
      item = {
        type: 'table',
        header: splitCells(cap[1].replace(/^ *| *\| *$/g, '')),
        align: cap[2].replace(/^ *|\| *$/g, '').split(/ *\| */),
        cells: cap[3] ? cap[3].replace(/\n$/, '').split('\n') : []
      };

      if (item.header.length === item.align.length) {
        src = src.substring(cap[0].length);

        for (i = 0; i < item.align.length; i++) {
          if (/^ *-+: *$/.test(item.align[i])) {
            item.align[i] = 'right';
          } else if (/^ *:-+: *$/.test(item.align[i])) {
            item.align[i] = 'center';
          } else if (/^ *:-+ *$/.test(item.align[i])) {
            item.align[i] = 'left';
          } else {
            item.align[i] = null;
          }
        }

        for (i = 0; i < item.cells.length; i++) {
          item.cells[i] = splitCells(item.cells[i], item.header.length);
        }

        this.tokens.push(item);

        continue;
      }
    }

    // hr
    if (cap = this.rules.hr.exec(src)) {
      src = src.substring(cap[0].length);
      this.tokens.push({
        type: 'hr'
      });
      continue;
    }

    // blockquote
    if (cap = this.rules.blockquote.exec(src)) {
      src = src.substring(cap[0].length);

      this.tokens.push({
        type: 'blockquote_start'
      });

      cap = cap[0].replace(/^ *> ?/gm, '');

      // Pass `top` to keep the current
      // "toplevel" state. This is exactly
      // how markdown.pl works.
      this.token(cap, top);

      this.tokens.push({
        type: 'blockquote_end'
      });

      continue;
    }

    // list
    if (cap = this.rules.list.exec(src)) {
      src = src.substring(cap[0].length);
      bull = cap[2];
      isordered = bull.length > 1;

      listStart = {
        type: 'list_start',
        ordered: isordered,
        start: isordered ? +bull : '',
        loose: false
      };

      this.tokens.push(listStart);

      // Get each top-level item.
      cap = cap[0].match(this.rules.item);

      listItems = [];
      next = false;
      l = cap.length;
      i = 0;

      for (; i < l; i++) {
        item = cap[i];

        // Remove the list item's bullet
        // so it is seen as the next token.
        space = item.length;
        item = item.replace(/^ *([*+-]|\d+\.) +/, '');

        // Outdent whatever the
        // list item contains. Hacky.
        if (~item.indexOf('\n ')) {
          space -= item.length;
          item = !this.options.pedantic
            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')
            : item.replace(/^ {1,4}/gm, '');
        }

        // Determine whether the next list item belongs here.
        // Backpedal if it does not belong in this list.
        if (this.options.smartLists && i !== l - 1) {
          b = block.bullet.exec(cap[i + 1])[0];
          if (bull !== b && !(bull.length > 1 && b.length > 1)) {
            src = cap.slice(i + 1).join('\n') + src;
            i = l - 1;
          }
        }

        // Determine whether item is loose or not.
        // Use: /(^|\n)(?! )[^\n]+\n\n(?!\s*$)/
        // for discount behavior.
        loose = next || /\n\n(?!\s*$)/.test(item);
        if (i !== l - 1) {
          next = item.charAt(item.length - 1) === '\n';
          if (!loose) loose = next;
        }

        if (loose) {
          listStart.loose = true;
        }

        // Check for task list items
        istask = /^\[[ xX]\] /.test(item);
        ischecked = undefined;
        if (istask) {
          ischecked = item[1] !== ' ';
          item = item.replace(/^\[[ xX]\] +/, '');
        }

        t = {
          type: 'list_item_start',
          task: istask,
          checked: ischecked,
          loose: loose
        };

        listItems.push(t);
        this.tokens.push(t);

        // Recurse.
        this.token(item, false);

        this.tokens.push({
          type: 'list_item_end'
        });
      }

      if (listStart.loose) {
        l = listItems.length;
        i = 0;
        for (; i < l; i++) {
          listItems[i].loose = true;
        }
      }

      this.tokens.push({
        type: 'list_end'
      });

      continue;
    }

    // html
    if (cap = this.rules.html.exec(src)) {
      src = src.substring(cap[0].length);
      this.tokens.push({
        type: this.options.sanitize
          ? 'paragraph'
          : 'html',
        pre: !this.options.sanitizer
          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),
        text: cap[0]
      });
      continue;
    }

    // def
    if (top && (cap = this.rules.def.exec(src))) {
      src = src.substring(cap[0].length);
      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);
      tag = cap[1].toLowerCase().replace(/\s+/g, ' ');
      if (!this.tokens.links[tag]) {
        this.tokens.links[tag] = {
          href: cap[2],
          title: cap[3]
        };
      }
      continue;
    }

    // table (gfm)
    if (top && (cap = this.rules.table.exec(src))) {
      item = {
        type: 'table',
        header: splitCells(cap[1].replace(/^ *| *\| *$/g, '')),
        align: cap[2].replace(/^ *|\| *$/g, '').split(/ *\| */),
        cells: cap[3] ? cap[3].replace(/(?: *\| *)?\n$/, '').split('\n') : []
      };

      if (item.header.length === item.align.length) {
        src = src.substring(cap[0].length);

        for (i = 0; i < item.align.length; i++) {
          if (/^ *-+: *$/.test(item.align[i])) {
            item.align[i] = 'right';
          } else if (/^ *:-+: *$/.test(item.align[i])) {
            item.align[i] = 'center';
          } else if (/^ *:-+ *$/.test(item.align[i])) {
            item.align[i] = 'left';
          } else {
            item.align[i] = null;
          }
        }

        for (i = 0; i < item.cells.length; i++) {
          item.cells[i] = splitCells(
            item.cells[i].replace(/^ *\| *| *\| *$/g, ''),
            item.header.length);
        }

        this.tokens.push(item);

        continue;
      }
    }

    // lheading
    if (cap = this.rules.lheading.exec(src)) {
      src = src.substring(cap[0].length);
      this.tokens.push({
        type: 'heading',
        depth: cap[2] === '=' ? 1 : 2,
        text: cap[1]
      });
      continue;
    }

    // top-level paragraph
    if (top && (cap = this.rules.paragraph.exec(src))) {
      src = src.substring(cap[0].length);
      this.tokens.push({
        type: 'paragraph',
        text: cap[1].charAt(cap[1].length - 1) === '\n'
          ? cap[1].slice(0, -1)
          : cap[1]
      });
      continue;
    }

    // text
    if (cap = this.rules.text.exec(src)) {
      // Top-level should never reach here.
      src = src.substring(cap[0].length);
      this.tokens.push({
        type: 'text',
        text: cap[0]
      });
      continue;
    }

    if (src) {
      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));
    }
  }

  return this.tokens;
};

/**
 * Inline-Level Grammar
 */

var inline = {
  escape: /^\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/,
  autolink: /^<(scheme:[^\s\x00-\x1f<>]*|email)>/,
  url: noop,
  tag: '^comment'
    + '|^</[a-zA-Z][\\w:-]*\\s*>' // self-closing tag
    + '|^<[a-zA-Z][\\w-]*(?:attribute)*?\\s*/?>' // open tag
    + '|^<\\?[\\s\\S]*?\\?>' // processing instruction, e.g. <?php ?>
    + '|^<![a-zA-Z]+\\s[\\s\\S]*?>' // declaration, e.g. <!DOCTYPE html>
    + '|^<!\\[CDATA\\[[\\s\\S]*?\\]\\]>', // CDATA section
  link: /^!?\[(label)\]\(href(?:\s+(title))?\s*\)/,
  reflink: /^!?\[(label)\]\[(?!\s*\])((?:\\[\[\]]?|[^\[\]\\])+)\]/,
  nolink: /^!?\[(?!\s*\])((?:\[[^\[\]]*\]|\\[\[\]]|[^\[\]])*)\](?:\[\])?/,
  strong: /^__([^\s])__(?!_)|^\*\*([^\s])\*\*(?!\*)|^__([^\s][\s\S]*?[^\s])__(?!_)|^\*\*([^\s][\s\S]*?[^\s])\*\*(?!\*)/,
  em: /^_([^\s_])_(?!_)|^\*([^\s*"<\[])\*(?!\*)|^_([^\s][\s\S]*?[^\s_])_(?!_|[^\s.])|^_([^\s_][\s\S]*?[^\s])_(?!_|[^\s.])|^\*([^\s"<\[][\s\S]*?[^\s*])\*(?!\*)|^\*([^\s*"<\[][\s\S]*?[^\s])\*(?!\*)/,
  code: /^(`+)([^`]|[^`][\s\S]*?[^`])\1(?!`)/,
  br: /^( {2,}|\\)\n(?!\s*$)/,
  del: noop,
  text: /^(`+|[^`])[\s\S]*?(?=[\\<!\[`*]|\b_| {2,}\n|$)/
};

inline._escapes = /\\([!"#$%&'()*+,\-./:;<=>?@\[\]\\^_`{|}~])/g;

inline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;
inline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;
inline.autolink = edit(inline.autolink)
  .replace('scheme', inline._scheme)
  .replace('email', inline._email)
  .getRegex();

inline._attribute = /\s+[a-zA-Z:_][\w.:-]*(?:\s*=\s*"[^"]*"|\s*=\s*'[^']*'|\s*=\s*[^\s"'=<>`]+)?/;

inline.tag = edit(inline.tag)
  .replace('comment', block._comment)
  .replace('attribute', inline._attribute)
  .getRegex();

inline._label = /(?:\[[^\[\]]*\]|\\[\[\]]?|`[^`]*`|[^\[\]\\])*?/;
inline._href = /\s*(<(?:\\[<>]?|[^\s<>\\])*>|(?:\\[()]?|\([^\s\x00-\x1f\\]*\)|[^\s\x00-\x1f()\\])*?)/;
inline._title = /"(?:\\"?|[^"\\])*"|'(?:\\'?|[^'\\])*'|\((?:\\\)?|[^)\\])*\)/;

inline.link = edit(inline.link)
  .replace('label', inline._label)
  .replace('href', inline._href)
  .replace('title', inline._title)
  .getRegex();

inline.reflink = edit(inline.reflink)
  .replace('label', inline._label)
  .getRegex();

/**
 * Normal Inline Grammar
 */

inline.normal = merge({}, inline);

/**
 * Pedantic Inline Grammar
 */

inline.pedantic = merge({}, inline.normal, {
  strong: /^__(?=\S)([\s\S]*?\S)__(?!_)|^\*\*(?=\S)([\s\S]*?\S)\*\*(?!\*)/,
  em: /^_(?=\S)([\s\S]*?\S)_(?!_)|^\*(?=\S)([\s\S]*?\S)\*(?!\*)/,
  link: edit(/^!?\[(label)\]\((.*?)\)/)
    .replace('label', inline._label)
    .getRegex(),
  reflink: edit(/^!?\[(label)\]\s*\[([^\]]*)\]/)
    .replace('label', inline._label)
    .getRegex()
});

/**
 * GFM Inline Grammar
 */

inline.gfm = merge({}, inline.normal, {
  escape: edit(inline.escape).replace('])', '~|])').getRegex(),
  _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,
  url: /^((?:ftp|https?):\/\/|www\.)(?:[a-zA-Z0-9\-]+\.?)+[^\s<]*|^email/,
  _backpedal: /(?:[^?!.,:;*_~()&]+|\([^)]*\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,
  del: /^~+(?=\S)([\s\S]*?\S)~+/,
  text: edit(inline.text)
    .replace(']|', '~]|')
    .replace('|$', '|https?://|ftp://|www\\.|[a-zA-Z0-9.!#$%&\'*+/=?^_`{\\|}~-]+@|$')
    .getRegex()
});

inline.gfm.url = edit(inline.gfm.url)
  .replace('email', inline.gfm._extended_email)
  .getRegex();
/**
 * GFM + Line Breaks Inline Grammar
 */

inline.breaks = merge({}, inline.gfm, {
  br: edit(inline.br).replace('{2,}', '*').getRegex(),
  text: edit(inline.gfm.text).replace('{2,}', '*').getRegex()
});

/**
 * Inline Lexer & Compiler
 */

function InlineLexer(links, options) {
  this.options = options || marked.defaults;
  this.links = links;
  this.rules = inline.normal;
  this.renderer = this.options.renderer || new Renderer();
  this.renderer.options = this.options;

  if (!this.links) {
    throw new Error('Tokens array requires a `links` property.');
  }

  if (this.options.pedantic) {
    this.rules = inline.pedantic;
  } else if (this.options.gfm) {
    if (this.options.breaks) {
      this.rules = inline.breaks;
    } else {
      this.rules = inline.gfm;
    }
  }
}

/**
 * Expose Inline Rules
 */

InlineLexer.rules = inline;

/**
 * Static Lexing/Compiling Method
 */

InlineLexer.output = function(src, links, options) {
  var inline = new InlineLexer(links, options);
  return inline.output(src);
};

/**
 * Lexing/Compiling
 */

InlineLexer.prototype.output = function(src) {
  var out = '',
      link,
      text,
      href,
      title,
      cap,
      prevCapZero;

  while (src) {
    // escape
    if (cap = this.rules.escape.exec(src)) {
      src = src.substring(cap[0].length);
      out += cap[1];
      continue;
    }

    // autolink
    if (cap = this.rules.autolink.exec(src)) {
      src = src.substring(cap[0].length);
      if (cap[2] === '@') {
        text = escape(this.mangle(cap[1]));
        href = 'mailto:' + text;
      } else {
        text = escape(cap[1]);
        href = text;
      }
      out += this.renderer.link(href, null, text);
      continue;
    }

    // url (gfm)
    if (!this.inLink && (cap = this.rules.url.exec(src))) {
      if (cap[2] === '@') {
        text = escape(cap[0]);
        href = 'mailto:' + text;
      } else {
        // do extended autolink path validation
        do {
          prevCapZero = cap[0];
          cap[0] = this.rules._backpedal.exec(cap[0])[0];
        } while (prevCapZero !== cap[0]);
        text = escape(cap[0]);
        if (cap[1] === 'www.') {
          href = 'http://' + text;
        } else {
          href = text;
        }
      }
      src = src.substring(cap[0].length);
      out += this.renderer.link(href, null, text);
      continue;
    }

    // tag
    if (cap = this.rules.tag.exec(src)) {
      if (!this.inLink && /^<a /i.test(cap[0])) {
        this.inLink = true;
      } else if (this.inLink && /^<\/a>/i.test(cap[0])) {
        this.inLink = false;
      }
      if (!this.inRawBlock && /^<(pre|code|kbd|script)(\s|>)/i.test(cap[0])) {
        this.inRawBlock = true;
      } else if (this.inRawBlock && /^<\/(pre|code|kbd|script)(\s|>)/i.test(cap[0])) {
        this.inRawBlock = false;
      }

      src = src.substring(cap[0].length);
      out += this.options.sanitize
        ? this.options.sanitizer
          ? this.options.sanitizer(cap[0])
          : escape(cap[0])
        : cap[0];
      continue;
    }

    // link
    if (cap = this.rules.link.exec(src)) {
      src = src.substring(cap[0].length);
      this.inLink = true;
      href = cap[2];
      if (this.options.pedantic) {
        link = /^([^'"]*[^\s])\s+(['"])(.*)\2/.exec(href);

        if (link) {
          href = link[1];
          title = link[3];
        } else {
          title = '';
        }
      } else {
        title = cap[3] ? cap[3].slice(1, -1) : '';
      }
      href = href.trim().replace(/^<([\s\S]*)>$/, '$1');
      out += this.outputLink(cap, {
        href: InlineLexer.escapes(href),
        title: InlineLexer.escapes(title)
      });
      this.inLink = false;
      continue;
    }

    // reflink, nolink
    if ((cap = this.rules.reflink.exec(src))
        || (cap = this.rules.nolink.exec(src))) {
      src = src.substring(cap[0].length);
      link = (cap[2] || cap[1]).replace(/\s+/g, ' ');
      link = this.links[link.toLowerCase()];
      if (!link || !link.href) {
        out += cap[0].charAt(0);
        src = cap[0].substring(1) + src;
        continue;
      }
      this.inLink = true;
      out += this.outputLink(cap, link);
      this.inLink = false;
      continue;
    }

    // strong
    if (cap = this.rules.strong.exec(src)) {
      src = src.substring(cap[0].length);
      out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));
      continue;
    }

    // em
    if (cap = this.rules.em.exec(src)) {
      src = src.substring(cap[0].length);
      out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));
      continue;
    }

    // code
    if (cap = this.rules.code.exec(src)) {
      src = src.substring(cap[0].length);
      out += this.renderer.codespan(escape(cap[2].trim(), true));
      continue;
    }

    // br
    if (cap = this.rules.br.exec(src)) {
      src = src.substring(cap[0].length);
      out += this.renderer.br();
      continue;
    }

    // del (gfm)
    if (cap = this.rules.del.exec(src)) {
      src = src.substring(cap[0].length);
      out += this.renderer.del(this.output(cap[1]));
      continue;
    }

    // text
    if (cap = this.rules.text.exec(src)) {
      src = src.substring(cap[0].length);
      if (this.inRawBlock) {
        out += this.renderer.text(cap[0]);
      } else {
        out += this.renderer.text(escape(this.smartypants(cap[0])));
      }
      continue;
    }

    if (src) {
      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));
    }
  }

  return out;
};

InlineLexer.escapes = function(text) {
  return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;
};

/**
 * Compile Link
 */

InlineLexer.prototype.outputLink = function(cap, link) {
  var href = link.href,
      title = link.title ? escape(link.title) : null;

  return cap[0].charAt(0) !== '!'
    ? this.renderer.link(href, title, this.output(cap[1]))
    : this.renderer.image(href, title, escape(cap[1]));
};

/**
 * Smartypants Transformations
 */

InlineLexer.prototype.smartypants = function(text) {
  if (!this.options.smartypants) return text;
  return text
    // em-dashes
    .replace(/---/g, '\u2014')
    // en-dashes
    .replace(/--/g, '\u2013')
    // opening singles
    .replace(/(^|[-\u2014/(\[{"\s])'/g, '$1\u2018')
    // closing singles & apostrophes
    .replace(/'/g, '\u2019')
    // opening doubles
    .replace(/(^|[-\u2014/(\[{\u2018\s])"/g, '$1\u201c')
    // closing doubles
    .replace(/"/g, '\u201d')
    // ellipses
    .replace(/\.{3}/g, '\u2026');
};

/**
 * Mangle Links
 */

InlineLexer.prototype.mangle = function(text) {
  if (!this.options.mangle) return text;
  var out = '',
      l = text.length,
      i = 0,
      ch;

  for (; i < l; i++) {
    ch = text.charCodeAt(i);
    if (Math.random() > 0.5) {
      ch = 'x' + ch.toString(16);
    }
    out += '&#' + ch + ';';
  }

  return out;
};

/**
 * Renderer
 */

function Renderer(options) {
  this.options = options || marked.defaults;
}

Renderer.prototype.code = function(code, lang, escaped) {
  if (this.options.highlight) {
    var out = this.options.highlight(code, lang);
    if (out != null && out !== code) {
      escaped = true;
      code = out;
    }
  }

  if (!lang) {
    return '<pre><code>'
      + (escaped ? code : escape(code, true))
      + '</code></pre>';
  }

  return '<pre><code class="'
    + this.options.langPrefix
    + escape(lang, true)
    + '">'
    + (escaped ? code : escape(code, true))
    + '</code></pre>\n';
};

Renderer.prototype.blockquote = function(quote) {
  return '<blockquote>\n' + quote + '</blockquote>\n';
};

Renderer.prototype.html = function(html) {
  return html;
};

Renderer.prototype.heading = function(text, level, raw) {
  if (this.options.headerIds) {
    return '<h'
      + level
      + ' id="'
      + this.options.headerPrefix
      + raw.toLowerCase().replace(/[^\w]+/g, '-')
      + '">'
      + text
      + '</h'
      + level
      + '>\n';
  }
  // ignore IDs
  return '<h' + level + '>' + text + '</h' + level + '>\n';
};

Renderer.prototype.hr = function() {
  return this.options.xhtml ? '<hr/>\n' : '<hr>\n';
};

Renderer.prototype.list = function(body, ordered, start) {
  var type = ordered ? 'ol' : 'ul',
      startatt = (ordered && start !== 1) ? (' start="' + start + '"') : '';
  return '<' + type + startatt + '>\n' + body + '</' + type + '>\n';
};

Renderer.prototype.listitem = function(text) {
  return '<li>' + text + '</li>\n';
};

Renderer.prototype.checkbox = function(checked) {
  return '<input '
    + (checked ? 'checked="" ' : '')
    + 'disabled="" type="checkbox"'
    + (this.options.xhtml ? ' /' : '')
    + '> ';
};

Renderer.prototype.paragraph = function(text) {
  return '<p>' + text + '</p>\n';
};

Renderer.prototype.table = function(header, body) {
  if (body) body = '<tbody>' + body + '</tbody>';

  return '<table>\n'
    + '<thead>\n'
    + header
    + '</thead>\n'
    + body
    + '</table>\n';
};

Renderer.prototype.tablerow = function(content) {
  return '<tr>\n' + content + '</tr>\n';
};

Renderer.prototype.tablecell = function(content, flags) {
  var type = flags.header ? 'th' : 'td';
  var tag = flags.align
    ? '<' + type + ' align="' + flags.align + '">'
    : '<' + type + '>';
  return tag + content + '</' + type + '>\n';
};

// span level renderer
Renderer.prototype.strong = function(text) {
  return '<strong>' + text + '</strong>';
};

Renderer.prototype.em = function(text) {
  return '<em>' + text + '</em>';
};

Renderer.prototype.codespan = function(text) {
  return '<code>' + text + '</code>';
};

Renderer.prototype.br = function() {
  return this.options.xhtml ? '<br/>' : '<br>';
};

Renderer.prototype.del = function(text) {
  return '<del>' + text + '</del>';
};

Renderer.prototype.link = function(href, title, text) {
  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);
  if (href === null) {
    return text;
  }
  var out = '<a href="' + escape(href) + '"';
  if (title) {
    out += ' title="' + title + '"';
  }
  out += '>' + text + '</a>';
  return out;
};

Renderer.prototype.image = function(href, title, text) {
  href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);
  if (href === null) {
    return text;
  }

  var out = '<img src="' + href + '" alt="' + text + '"';
  if (title) {
    out += ' title="' + title + '"';
  }
  out += this.options.xhtml ? '/>' : '>';
  return out;
};

Renderer.prototype.text = function(text) {
  return text;
};

/**
 * TextRenderer
 * returns only the textual part of the token
 */

function TextRenderer() {}

// no need for block level renderers

TextRenderer.prototype.strong =
TextRenderer.prototype.em =
TextRenderer.prototype.codespan =
TextRenderer.prototype.del =
TextRenderer.prototype.text = function (text) {
  return text;
};

TextRenderer.prototype.link =
TextRenderer.prototype.image = function(href, title, text) {
  return '' + text;
};

TextRenderer.prototype.br = function() {
  return '';
};

/**
 * Parsing & Compiling
 */

function Parser(options) {
  this.tokens = [];
  this.token = null;
  this.options = options || marked.defaults;
  this.options.renderer = this.options.renderer || new Renderer();
  this.renderer = this.options.renderer;
  this.renderer.options = this.options;
}

/**
 * Static Parse Method
 */

Parser.parse = function(src, options) {
  var parser = new Parser(options);
  return parser.parse(src);
};

/**
 * Parse Loop
 */

Parser.prototype.parse = function(src) {
  this.inline = new InlineLexer(src.links, this.options);
  // use an InlineLexer with a TextRenderer to extract pure text
  this.inlineText = new InlineLexer(
    src.links,
    merge({}, this.options, {renderer: new TextRenderer()})
  );
  this.tokens = src.reverse();

  var out = '';
  while (this.next()) {
    out += this.tok();
  }

  return out;
};

/**
 * Next Token
 */

Parser.prototype.next = function() {
  return this.token = this.tokens.pop();
};

/**
 * Preview Next Token
 */

Parser.prototype.peek = function() {
  return this.tokens[this.tokens.length - 1] || 0;
};

/**
 * Parse Text Tokens
 */

Parser.prototype.parseText = function() {
  var body = this.token.text;

  while (this.peek().type === 'text') {
    body += '\n' + this.next().text;
  }

  return this.inline.output(body);
};

/**
 * Parse Current Token
 */

Parser.prototype.tok = function() {
  switch (this.token.type) {
    case 'space': {
      return '';
    }
    case 'hr': {
      return this.renderer.hr();
    }
    case 'heading': {
      return this.renderer.heading(
        this.inline.output(this.token.text),
        this.token.depth,
        unescape(this.inlineText.output(this.token.text)));
    }
    case 'code': {
      return this.renderer.code(this.token.text,
        this.token.lang,
        this.token.escaped);
    }
    case 'table': {
      var header = '',
          body = '',
          i,
          row,
          cell,
          j;

      // header
      cell = '';
      for (i = 0; i < this.token.header.length; i++) {
        cell += this.renderer.tablecell(
          this.inline.output(this.token.header[i]),
          { header: true, align: this.token.align[i] }
        );
      }
      header += this.renderer.tablerow(cell);

      for (i = 0; i < this.token.cells.length; i++) {
        row = this.token.cells[i];

        cell = '';
        for (j = 0; j < row.length; j++) {
          cell += this.renderer.tablecell(
            this.inline.output(row[j]),
            { header: false, align: this.token.align[j] }
          );
        }

        body += this.renderer.tablerow(cell);
      }
      return this.renderer.table(header, body);
    }
    case 'blockquote_start': {
      body = '';

      while (this.next().type !== 'blockquote_end') {
        body += this.tok();
      }

      return this.renderer.blockquote(body);
    }
    case 'list_start': {
      body = '';
      var ordered = this.token.ordered,
          start = this.token.start;

      while (this.next().type !== 'list_end') {
        body += this.tok();
      }

      return this.renderer.list(body, ordered, start);
    }
    case 'list_item_start': {
      body = '';
      var loose = this.token.loose;

      if (this.token.task) {
        body += this.renderer.checkbox(this.token.checked);
      }

      while (this.next().type !== 'list_item_end') {
        body += !loose && this.token.type === 'text'
          ? this.parseText()
          : this.tok();
      }

      return this.renderer.listitem(body);
    }
    case 'html': {
      // TODO parse inline content if parameter markdown=1
      return this.renderer.html(this.token.text);
    }
    case 'paragraph': {
      return this.renderer.paragraph(this.inline.output(this.token.text));
    }
    case 'text': {
      return this.renderer.paragraph(this.parseText());
    }
  }
};

/**
 * Helpers
 */

function escape(html, encode) {
  if (encode) {
    if (escape.escapeTest.test(html)) {
      return html.replace(escape.escapeReplace, function (ch) { return escape.replacements[ch]; });
    }
  } else {
    if (escape.escapeTestNoEncode.test(html)) {
      return html.replace(escape.escapeReplaceNoEncode, function (ch) { return escape.replacements[ch]; });
    }
  }

  return html;
}

escape.escapeTest = /[&<>"']/;
escape.escapeReplace = /[&<>"']/g;
escape.replacements = {
  '&': '&amp;',
  '<': '&lt;',
  '>': '&gt;',
  '"': '&quot;',
  "'": '&#39;'
};

escape.escapeTestNoEncode = /[<>"']|&(?!#?\w+;)/;
escape.escapeReplaceNoEncode = /[<>"']|&(?!#?\w+;)/g;

function unescape(html) {
  // explicitly match decimal, hex, and named HTML entities
  return html.replace(/&(#(?:\d+)|(?:#x[0-9A-Fa-f]+)|(?:\w+));?/ig, function(_, n) {
    n = n.toLowerCase();
    if (n === 'colon') return ':';
    if (n.charAt(0) === '#') {
      return n.charAt(1) === 'x'
        ? String.fromCharCode(parseInt(n.substring(2), 16))
        : String.fromCharCode(+n.substring(1));
    }
    return '';
  });
}

function edit(regex, opt) {
  regex = regex.source || regex;
  opt = opt || '';
  return {
    replace: function(name, val) {
      val = val.source || val;
      val = val.replace(/(^|[^\[])\^/g, '$1');
      regex = regex.replace(name, val);
      return this;
    },
    getRegex: function() {
      return new RegExp(regex, opt);
    }
  };
}

function cleanUrl(sanitize, base, href) {
  if (sanitize) {
    try {
      var prot = decodeURIComponent(unescape(href))
        .replace(/[^\w:]/g, '')
        .toLowerCase();
    } catch (e) {
      return null;
    }
    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {
      return null;
    }
  }
  if (base && !originIndependentUrl.test(href)) {
    href = resolveUrl(base, href);
  }
  try {
    href = encodeURI(href).replace(/%25/g, '%');
  } catch (e) {
    return null;
  }
  return href;
}

function resolveUrl(base, href) {
  if (!baseUrls[' ' + base]) {
    // we can ignore everything in base after the last slash of its path component,
    // but we might need to add _that_
    // https://tools.ietf.org/html/rfc3986#section-3
    if (/^[^:]+:\/*[^/]*$/.test(base)) {
      baseUrls[' ' + base] = base + '/';
    } else {
      baseUrls[' ' + base] = rtrim(base, '/', true);
    }
  }
  base = baseUrls[' ' + base];

  if (href.slice(0, 2) === '//') {
    return base.replace(/:[\s\S]*/, ':') + href;
  } else if (href.charAt(0) === '/') {
    return base.replace(/(:\/*[^/]*)[\s\S]*/, '$1') + href;
  } else {
    return base + href;
  }
}
var baseUrls = {};
var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;

function noop() {}
noop.exec = noop;

function merge(obj) {
  var i = 1,
      target,
      key;

  for (; i < arguments.length; i++) {
    target = arguments[i];
    for (key in target) {
      if (Object.prototype.hasOwnProperty.call(target, key)) {
        obj[key] = target[key];
      }
    }
  }

  return obj;
}

function splitCells(tableRow, count) {
  // ensure that every cell-delimiting pipe has a space
  // before it to distinguish it from an escaped pipe
  var row = tableRow.replace(/\|/g, function (match, offset, str) {
        var escaped = false,
            curr = offset;
        while (--curr >= 0 && str[curr] === '\\') escaped = !escaped;
        if (escaped) {
          // odd number of slashes means | is escaped
          // so we leave it alone
          return '|';
        } else {
          // add space before unescaped |
          return ' |';
        }
      }),
      cells = row.split(/ \|/),
      i = 0;

  if (cells.length > count) {
    cells.splice(count);
  } else {
    while (cells.length < count) cells.push('');
  }

  for (; i < cells.length; i++) {
    // leading or trailing whitespace is ignored per the gfm spec
    cells[i] = cells[i].trim().replace(/\\\|/g, '|');
  }
  return cells;
}

// Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').
// /c*$/ is vulnerable to REDOS.
// invert: Remove suffix of non-c chars instead. Default falsey.
function rtrim(str, c, invert) {
  if (str.length === 0) {
    return '';
  }

  // Length of suffix matching the invert condition.
  var suffLen = 0;

  // Step left until we fail to match the invert condition.
  while (suffLen < str.length) {
    var currChar = str.charAt(str.length - suffLen - 1);
    if (currChar === c && !invert) {
      suffLen++;
    } else if (currChar !== c && invert) {
      suffLen++;
    } else {
      break;
    }
  }

  return str.substr(0, str.length - suffLen);
}

/**
 * Marked
 */

function marked(src, opt, callback) {
  // throw error in case of non string input
  if (typeof src === 'undefined' || src === null) {
    throw new Error('marked(): input parameter is undefined or null');
  }
  if (typeof src !== 'string') {
    throw new Error('marked(): input parameter is of type '
      + Object.prototype.toString.call(src) + ', string expected');
  }

  if (callback || typeof opt === 'function') {
    if (!callback) {
      callback = opt;
      opt = null;
    }

    opt = merge({}, marked.defaults, opt || {});

    var highlight = opt.highlight,
        tokens,
        pending,
        i = 0;

    try {
      tokens = Lexer.lex(src, opt);
    } catch (e) {
      return callback(e);
    }

    pending = tokens.length;

    var done = function(err) {
      if (err) {
        opt.highlight = highlight;
        return callback(err);
      }

      var out;

      try {
        out = Parser.parse(tokens, opt);
      } catch (e) {
        err = e;
      }

      opt.highlight = highlight;

      return err
        ? callback(err)
        : callback(null, out);
    };

    if (!highlight || highlight.length < 3) {
      return done();
    }

    delete opt.highlight;

    if (!pending) return done();

    for (; i < tokens.length; i++) {
      (function(token) {
        if (token.type !== 'code') {
          return --pending || done();
        }
        return highlight(token.text, token.lang, function(err, code) {
          if (err) return done(err);
          if (code == null || code === token.text) {
            return --pending || done();
          }
          token.text = code;
          token.escaped = true;
          --pending || done();
        });
      })(tokens[i]);
    }

    return;
  }
  try {
    if (opt) opt = merge({}, marked.defaults, opt);
    return Parser.parse(Lexer.lex(src, opt), opt);
  } catch (e) {
    e.message += '\nPlease report this to https://github.com/markedjs/marked.';
    if ((opt || marked.defaults).silent) {
      return '<p>An error occurred:</p><pre>'
        + escape(e.message + '', true)
        + '</pre>';
    }
    throw e;
  }
}

/**
 * Options
 */

marked.options =
marked.setOptions = function(opt) {
  merge(marked.defaults, opt);
  return marked;
};

marked.getDefaults = function () {
  return {
    baseUrl: null,
    breaks: false,
    gfm: true,
    headerIds: true,
    headerPrefix: '',
    highlight: null,
    langPrefix: 'language-',
    mangle: true,
    pedantic: false,
    renderer: new Renderer(),
    sanitize: false,
    sanitizer: null,
    silent: false,
    smartLists: false,
    smartypants: false,
    tables: true,
    xhtml: false
  };
};

marked.defaults = marked.getDefaults();

/**
 * Expose
 */

marked.Parser = Parser;
marked.parser = Parser.parse;

marked.Renderer = Renderer;
marked.TextRenderer = TextRenderer;

marked.Lexer = Lexer;
marked.lexer = Lexer.lex;

marked.InlineLexer = InlineLexer;
marked.inlineLexer = InlineLexer.output;

marked.parse = marked;

if (true) {
  module.exports = marked;
} else {}
})(this || (typeof window !== 'undefined' ? window : global));


/***/ }),

/***/ "../../node_modules/ngx-md/fesm5/ngx-md.js":
/*!******************************************************************!*\
  !*** /home/circleci/iridium/node_modules/ngx-md/fesm5/ngx-md.js ***!
  \******************************************************************/
/*! exports provided: NgxMdService, NgxMdComponent, NgxMdModule, ɵa */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgxMdService", function() { return NgxMdService; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgxMdComponent", function() { return NgxMdComponent; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NgxMdModule", function() { return NgxMdModule; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ɵa", function() { return NgxMdConfig; });
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ "../../node_modules/@angular/core/fesm5/core.js");
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ "../../node_modules/@angular/common/fesm5/http.js");
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! rxjs */ "../../node_modules/rxjs/_esm5/index.js");
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! rxjs/operators */ "../../node_modules/rxjs/_esm5/operators/index.js");
/* harmony import */ var marked__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! marked */ "../../node_modules/marked/lib/marked.js");
/* harmony import */ var marked__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(marked__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/platform-browser */ "../../node_modules/@angular/platform-browser/fesm5/platform-browser.js");
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common */ "../../node_modules/@angular/common/fesm5/common.js");
/* harmony import */ var prismjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! prismjs */ "../../node_modules/prismjs/prism.js");
/* harmony import */ var prismjs__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(prismjs__WEBPACK_IMPORTED_MODULE_7__);








/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
var NgxMdService = /** @class */ /*@__PURE__*/ (function () {
    function NgxMdService(_http, _domSanitizer) {
        this._http = _http;
        this._domSanitizer = _domSanitizer;
        this._renderer = new marked__WEBPACK_IMPORTED_MODULE_4__["Renderer"]();
        this.extendRenderer();
        this.setMarkedOptions({});
    }
    // get the content from remote resource
    /**
     * @param {?} path
     * @return {?}
     */
    NgxMdService.prototype.getContent = /**
     * @param {?} path
     * @return {?}
     */
        function (path) {
            var _this = this;
            return this._http.get(path, { responseType: 'text' })
                .pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["map"])(function (res) { return _this.extractData(res); }), Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["catchError"])(this.handleError));
        };
    Object.defineProperty(NgxMdService.prototype, "renderer", {
        get: /**
         * @return {?}
         */ function () {
            return this._renderer;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} res
     * @return {?}
     */
    NgxMdService.prototype.extractData = /**
     * @param {?} res
     * @return {?}
     */
        function (res) {
            return res || '';
        };
    /**
     * @param {?} options
     * @return {?}
     */
    NgxMdService.prototype.setMarkedOptions = /**
     * @param {?} options
     * @return {?}
     */
        function (options) {
            options = Object.assign({
                gfm: true,
                tables: true,
                breaks: false,
                pedantic: false,
                sanitize: false,
                smartLists: true,
                smartypants: false
            }, options);
            options.renderer = this._renderer;
            Object(marked__WEBPACK_IMPORTED_MODULE_4__["setOptions"])(options);
        };
    /**
     * @param {?} data
     * @param {?=} sanitize
     * @return {?}
     */
    NgxMdService.prototype.compile = /**
     * @param {?} data
     * @param {?=} sanitize
     * @return {?}
     */
        function (data, sanitize) {
            if (sanitize === void 0) {
                sanitize = true;
            }
            return this._domSanitizer.sanitize(sanitize ? _angular_core__WEBPACK_IMPORTED_MODULE_0__["SecurityContext"].HTML : _angular_core__WEBPACK_IMPORTED_MODULE_0__["SecurityContext"].NONE, Object(marked__WEBPACK_IMPORTED_MODULE_4__["parse"])(data).trim());
        };
    /**
     * @param {?} error
     * @return {?}
     */
    NgxMdService.prototype.handleError = /**
     * @param {?} error
     * @return {?}
     */
        function (error) {
            /** @type {?} */
            var errMsg;
            if (error instanceof fetch) {
                /** @type {?} */
                var body = error.json() || '';
                /** @type {?} */
                var err = body.error || JSON.stringify(body);
                errMsg = error.status + " - " + (error.statusText || '') + " " + err;
            }
            else {
                errMsg = error.message ? error.message : error.toString();
            }
            return Object(rxjs__WEBPACK_IMPORTED_MODULE_2__["throwError"])(errMsg);
        };
    /**
     * @return {?}
     */
    NgxMdService.prototype.extendRenderer = /**
     * @return {?}
     */
        function () {
            this._renderer.listitem = function (text) {
                if (/^\s*\[[x ]\]\s*/.test(text)) {
                    text = text
                        .replace(/^\s*\[ \]\s*/, '<input type="checkbox" class="md-checkbox" disabled> ')
                        .replace(/^\s*\[x\]\s*/, '<input type="checkbox" class="md-checkbox" checked disabled> ');
                    return '<li style="list-style: none">' + text + '</li>';
                }
                else {
                    return '<li>' + text + '</li>';
                }
            };
        };
    /** @nocollapse */ NgxMdService.ngInjectableDef = Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["defineInjectable"])({ factory: function NgxMdService_Factory() { return new NgxMdService(Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"])(_angular_common_http__WEBPACK_IMPORTED_MODULE_1__["HttpClient"]), Object(_angular_core__WEBPACK_IMPORTED_MODULE_0__["inject"])(_angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__["DomSanitizer"])); }, token: NgxMdService, providedIn: "root" });
    return NgxMdService;
}());
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
var NgxMdComponent = /** @class */ /*@__PURE__*/ (function () {
    function NgxMdComponent(_mdService, _el, platformId) {
        this._mdService = _mdService;
        this._el = _el;
        this.platformId = platformId;
        this.changeLog = [];
        this.errror = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        this.loaded = new _angular_core__WEBPACK_IMPORTED_MODULE_0__["EventEmitter"]();
        /**
         * Boolean indicating if the markdown content should be sanitized to avoid script injections
         */
        this.sanitizeHtml = true;
    }
    Object.defineProperty(NgxMdComponent.prototype, "path", {
        set: /**
         * @param {?} value
         * @return {?}
         */ function (value) {
            if (value) {
                this._path = value;
                this.onPathChange();
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(NgxMdComponent.prototype, "data", {
        set: /**
         * @param {?} value
         * @return {?}
         */ function (value) {
            if (value) {
                this._data = value;
                this.onDataChange(value);
            }
        },
        enumerable: true,
        configurable: true
    });
    // on input
    /**
     * @param {?} data
     * @return {?}
     */
    NgxMdComponent.prototype.onDataChange = /**
     * @param {?} data
     * @return {?}
     */
        function (data) {
            if (data) {
                this._el.nativeElement.innerHTML = this._mdService.compile(data, this.sanitizeHtml);
            }
            else {
                this._el.nativeElement.innerHTML = '';
            }
            this.highlightContent(false);
        };
    /**
     *  After view init
     */
    /**
     *  After view init
     * @return {?}
     */
    NgxMdComponent.prototype.ngAfterViewInit = /**
     *  After view init
     * @return {?}
     */
        function () {
            if (this._path) {
                this.onPathChange();
            }
            else if (!this._data) {
                this.processRaw();
            }
        };
    /**
     * @return {?}
     */
    NgxMdComponent.prototype.processRaw = /**
     * @return {?}
     */
        function () {
            this._md = this.prepare(decodeHtml(this._el.nativeElement.innerHTML));
            this._el.nativeElement.innerHTML = this._mdService.compile(this._md, this.sanitizeHtml);
            this.highlightContent(false);
        };
    /**
     * get remote conent;
     */
    /**
     * get remote conent;
     * @return {?}
     */
    NgxMdComponent.prototype.onPathChange = /**
     * get remote conent;
     * @return {?}
     */
        function () {
            var _this = this;
            this._ext = this._path && this._path.split('.').splice(-1).join();
            this._mdService.getContent(this._path).pipe(Object(rxjs_operators__WEBPACK_IMPORTED_MODULE_3__["catchError"])(this.handleError))
                .subscribe(function (data) {
                _this.loaded.emit(data);
                _this._md = _this._ext !== 'md' ? '```' + _this._ext + '\n' + data + '\n```' : data;
                _this._el.nativeElement.innerHTML = _this._mdService.compile(_this.prepare(_this._md), _this.sanitizeHtml);
                _this.highlightContent(false);
            });
        };
    /**
     * catch http error
     * @param {?} error
     * @return {?}
     */
    NgxMdComponent.prototype.handleError = /**
     * catch http error
     * @param {?} error
     * @return {?}
     */
        function (error) {
            this.errror.emit(error);
            console.error('An error occurred', error); // for demo purposes only
            return error.message || error;
        };
    /**
     * Prepare string
     */
    /**
     * Prepare string
     * @param {?} raw
     * @return {?}
     */
    NgxMdComponent.prototype.prepare = /**
     * Prepare string
     * @param {?} raw
     * @return {?}
     */
        function (raw) {
            var _this = this;
            if (!raw) {
                return '';
            }
            if (this._ext === 'md' || !this.path) {
                /** @type {?} */
                var isCodeBlock_1 = false;
                return raw.split('\n').map(function (line) {
                    // If the first non-blank chars are an opening/closing code block, toggle the flag
                    if (_this.trimLeft(line).substring(0, 3) === '```') {
                        isCodeBlock_1 = !isCodeBlock_1;
                    }
                    return isCodeBlock_1 ? line : line.trim();
                }).join('\n');
            }
            return raw.replace(/\"/g, '\'');
        };
    /**
     * Trim left whitespace
     * @param {?} line
     * @return {?}
     */
    NgxMdComponent.prototype.trimLeft = /**
     * Trim left whitespace
     * @param {?} line
     * @return {?}
     */
        function (line) {
            return line.replace(/^\s+|\s+$/g, '');
        };
    /**
     * Use Prism to highlight code snippets only on the browser
     * @param {?} async
     * @return {?}
     */
    NgxMdComponent.prototype.highlightContent = /**
     * Use Prism to highlight code snippets only on the browser
     * @param {?} async
     * @return {?}
     */
        function (async) {
            if (Object(_angular_common__WEBPACK_IMPORTED_MODULE_6__["isPlatformBrowser"])(this.platformId)) {
                Object(prismjs__WEBPACK_IMPORTED_MODULE_7__["highlightAll"])(async);
            }
        };
    return NgxMdComponent;
}());
/**
 * @param {?} html
 * @return {?}
 */
function decodeHtml(html) {
    /** @type {?} */
    var txt = document.createElement('textarea');
    txt.innerHTML = html;
    return txt.value;
}
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
var NgxMdConfig = /** @class */ /*@__PURE__*/ (function () {
    function NgxMdConfig() {
    }
    return NgxMdConfig;
}());
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
var NgxMdModule = /** @class */ /*@__PURE__*/ (function () {
    function NgxMdModule() {
    }
    /**
     * @return {?}
     */
    NgxMdModule.forRoot = /**
     * @return {?}
     */
        function () {
            return {
                ngModule: NgxMdModule,
                providers: [NgxMdConfig]
            };
        };
    return NgxMdModule;
}());
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */
/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,uselessCode} checked by tsc
 */

//# sourceMappingURL=data:application/json;charset=utf-8;base64,


/***/ }),

/***/ "../../node_modules/prismjs/prism.js":
/*!************************************************************!*\
  !*** /home/circleci/iridium/node_modules/prismjs/prism.js ***!
  \************************************************************/
/*! no static exports found */
/***/ (function(module, exports) {


/* **********************************************
     Begin prism-core.js
********************************************** */

var _self = (typeof window !== 'undefined')
	? window   // if in browser
	: (
		(typeof WorkerGlobalScope !== 'undefined' && self instanceof WorkerGlobalScope)
		? self // if in worker
		: {}   // if in node js
	);

/**
 * Prism: Lightweight, robust, elegant syntax highlighting
 * MIT license http://www.opensource.org/licenses/mit-license.php/
 * @author Lea Verou http://lea.verou.me
 */

var Prism = (function(){

// Private helper vars
var lang = /\blang(?:uage)?-([\w-]+)\b/i;
var uniqueId = 0;

var _ = _self.Prism = {
	manual: _self.Prism && _self.Prism.manual,
	disableWorkerMessageHandler: _self.Prism && _self.Prism.disableWorkerMessageHandler,
	util: {
		encode: function (tokens) {
			if (tokens instanceof Token) {
				return new Token(tokens.type, _.util.encode(tokens.content), tokens.alias);
			} else if (_.util.type(tokens) === 'Array') {
				return tokens.map(_.util.encode);
			} else {
				return tokens.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/\u00a0/g, ' ');
			}
		},

		type: function (o) {
			return Object.prototype.toString.call(o).match(/\[object (\w+)\]/)[1];
		},

		objId: function (obj) {
			if (!obj['__id']) {
				Object.defineProperty(obj, '__id', { value: ++uniqueId });
			}
			return obj['__id'];
		},

		// Deep clone a language definition (e.g. to extend it)
		clone: function (o, visited) {
			var type = _.util.type(o);
			visited = visited || {};

			switch (type) {
				case 'Object':
					if (visited[_.util.objId(o)]) {
						return visited[_.util.objId(o)];
					}
					var clone = {};
					visited[_.util.objId(o)] = clone;

					for (var key in o) {
						if (o.hasOwnProperty(key)) {
							clone[key] = _.util.clone(o[key], visited);
						}
					}

					return clone;

				case 'Array':
					if (visited[_.util.objId(o)]) {
						return visited[_.util.objId(o)];
					}
					var clone = [];
					visited[_.util.objId(o)] = clone;

					o.forEach(function (v, i) {
						clone[i] = _.util.clone(v, visited);
					});

					return clone;
			}

			return o;
		}
	},

	languages: {
		extend: function (id, redef) {
			var lang = _.util.clone(_.languages[id]);

			for (var key in redef) {
				lang[key] = redef[key];
			}

			return lang;
		},

		/**
		 * Insert a token before another token in a language literal
		 * As this needs to recreate the object (we cannot actually insert before keys in object literals),
		 * we cannot just provide an object, we need anobject and a key.
		 * @param inside The key (or language id) of the parent
		 * @param before The key to insert before. If not provided, the function appends instead.
		 * @param insert Object with the key/value pairs to insert
		 * @param root The object that contains `inside`. If equal to Prism.languages, it can be omitted.
		 */
		insertBefore: function (inside, before, insert, root) {
			root = root || _.languages;
			var grammar = root[inside];

			if (arguments.length == 2) {
				insert = arguments[1];

				for (var newToken in insert) {
					if (insert.hasOwnProperty(newToken)) {
						grammar[newToken] = insert[newToken];
					}
				}

				return grammar;
			}

			var ret = {};

			for (var token in grammar) {

				if (grammar.hasOwnProperty(token)) {

					if (token == before) {

						for (var newToken in insert) {

							if (insert.hasOwnProperty(newToken)) {
								ret[newToken] = insert[newToken];
							}
						}
					}

					ret[token] = grammar[token];
				}
			}

			// Update references in other language definitions
			_.languages.DFS(_.languages, function(key, value) {
				if (value === root[inside] && key != inside) {
					this[key] = ret;
				}
			});

			return root[inside] = ret;
		},

		// Traverse a language definition with Depth First Search
		DFS: function(o, callback, type, visited) {
			visited = visited || {};
			for (var i in o) {
				if (o.hasOwnProperty(i)) {
					callback.call(o, i, o[i], type || i);

					if (_.util.type(o[i]) === 'Object' && !visited[_.util.objId(o[i])]) {
						visited[_.util.objId(o[i])] = true;
						_.languages.DFS(o[i], callback, null, visited);
					}
					else if (_.util.type(o[i]) === 'Array' && !visited[_.util.objId(o[i])]) {
						visited[_.util.objId(o[i])] = true;
						_.languages.DFS(o[i], callback, i, visited);
					}
				}
			}
		}
	},
	plugins: {},

	highlightAll: function(async, callback) {
		_.highlightAllUnder(document, async, callback);
	},

	highlightAllUnder: function(container, async, callback) {
		var env = {
			callback: callback,
			selector: 'code[class*="language-"], [class*="language-"] code, code[class*="lang-"], [class*="lang-"] code'
		};

		_.hooks.run("before-highlightall", env);

		var elements = env.elements || container.querySelectorAll(env.selector);

		for (var i=0, element; element = elements[i++];) {
			_.highlightElement(element, async === true, env.callback);
		}
	},

	highlightElement: function(element, async, callback) {
		// Find language
		var language, grammar, parent = element;

		while (parent && !lang.test(parent.className)) {
			parent = parent.parentNode;
		}

		if (parent) {
			language = (parent.className.match(lang) || [,''])[1].toLowerCase();
			grammar = _.languages[language];
		}

		// Set language on the element, if not present
		element.className = element.className.replace(lang, '').replace(/\s+/g, ' ') + ' language-' + language;

		if (element.parentNode) {
			// Set language on the parent, for styling
			parent = element.parentNode;

			if (/pre/i.test(parent.nodeName)) {
				parent.className = parent.className.replace(lang, '').replace(/\s+/g, ' ') + ' language-' + language;
			}
		}

		var code = element.textContent;

		var env = {
			element: element,
			language: language,
			grammar: grammar,
			code: code
		};

		_.hooks.run('before-sanity-check', env);

		if (!env.code || !env.grammar) {
			if (env.code) {
				_.hooks.run('before-highlight', env);
				env.element.textContent = env.code;
				_.hooks.run('after-highlight', env);
			}
			_.hooks.run('complete', env);
			return;
		}

		_.hooks.run('before-highlight', env);

		if (async && _self.Worker) {
			var worker = new Worker(_.filename);

			worker.onmessage = function(evt) {
				env.highlightedCode = evt.data;

				_.hooks.run('before-insert', env);

				env.element.innerHTML = env.highlightedCode;

				callback && callback.call(env.element);
				_.hooks.run('after-highlight', env);
				_.hooks.run('complete', env);
			};

			worker.postMessage(JSON.stringify({
				language: env.language,
				code: env.code,
				immediateClose: true
			}));
		}
		else {
			env.highlightedCode = _.highlight(env.code, env.grammar, env.language);

			_.hooks.run('before-insert', env);

			env.element.innerHTML = env.highlightedCode;

			callback && callback.call(element);

			_.hooks.run('after-highlight', env);
			_.hooks.run('complete', env);
		}
	},

	highlight: function (text, grammar, language) {
		var env = {
			code: text,
			grammar: grammar,
			language: language
		};
		_.hooks.run('before-tokenize', env);
		env.tokens = _.tokenize(env.code, env.grammar);
		_.hooks.run('after-tokenize', env);
		return Token.stringify(_.util.encode(env.tokens), env.language);
	},

	matchGrammar: function (text, strarr, grammar, index, startPos, oneshot, target) {
		var Token = _.Token;

		for (var token in grammar) {
			if(!grammar.hasOwnProperty(token) || !grammar[token]) {
				continue;
			}

			if (token == target) {
				return;
			}

			var patterns = grammar[token];
			patterns = (_.util.type(patterns) === "Array") ? patterns : [patterns];

			for (var j = 0; j < patterns.length; ++j) {
				var pattern = patterns[j],
					inside = pattern.inside,
					lookbehind = !!pattern.lookbehind,
					greedy = !!pattern.greedy,
					lookbehindLength = 0,
					alias = pattern.alias;

				if (greedy && !pattern.pattern.global) {
					// Without the global flag, lastIndex won't work
					var flags = pattern.pattern.toString().match(/[imuy]*$/)[0];
					pattern.pattern = RegExp(pattern.pattern.source, flags + "g");
				}

				pattern = pattern.pattern || pattern;

				// Don’t cache length as it changes during the loop
				for (var i = index, pos = startPos; i < strarr.length; pos += strarr[i].length, ++i) {

					var str = strarr[i];

					if (strarr.length > text.length) {
						// Something went terribly wrong, ABORT, ABORT!
						return;
					}

					if (str instanceof Token) {
						continue;
					}

					if (greedy && i != strarr.length - 1) {
						pattern.lastIndex = pos;
						var match = pattern.exec(text);
						if (!match) {
							break;
						}

						var from = match.index + (lookbehind ? match[1].length : 0),
						    to = match.index + match[0].length,
						    k = i,
						    p = pos;

						for (var len = strarr.length; k < len && (p < to || (!strarr[k].type && !strarr[k - 1].greedy)); ++k) {
							p += strarr[k].length;
							// Move the index i to the element in strarr that is closest to from
							if (from >= p) {
								++i;
								pos = p;
							}
						}

						// If strarr[i] is a Token, then the match starts inside another Token, which is invalid
						if (strarr[i] instanceof Token) {
							continue;
						}

						// Number of tokens to delete and replace with the new match
						delNum = k - i;
						str = text.slice(pos, p);
						match.index -= pos;
					} else {
						pattern.lastIndex = 0;

						var match = pattern.exec(str),
							delNum = 1;
					}

					if (!match) {
						if (oneshot) {
							break;
						}

						continue;
					}

					if(lookbehind) {
						lookbehindLength = match[1] ? match[1].length : 0;
					}

					var from = match.index + lookbehindLength,
					    match = match[0].slice(lookbehindLength),
					    to = from + match.length,
					    before = str.slice(0, from),
					    after = str.slice(to);

					var args = [i, delNum];

					if (before) {
						++i;
						pos += before.length;
						args.push(before);
					}

					var wrapped = new Token(token, inside? _.tokenize(match, inside) : match, alias, match, greedy);

					args.push(wrapped);

					if (after) {
						args.push(after);
					}

					Array.prototype.splice.apply(strarr, args);

					if (delNum != 1)
						_.matchGrammar(text, strarr, grammar, i, pos, true, token);

					if (oneshot)
						break;
				}
			}
		}
	},

	tokenize: function(text, grammar, language) {
		var strarr = [text];

		var rest = grammar.rest;

		if (rest) {
			for (var token in rest) {
				grammar[token] = rest[token];
			}

			delete grammar.rest;
		}

		_.matchGrammar(text, strarr, grammar, 0, 0, false);

		return strarr;
	},

	hooks: {
		all: {},

		add: function (name, callback) {
			var hooks = _.hooks.all;

			hooks[name] = hooks[name] || [];

			hooks[name].push(callback);
		},

		run: function (name, env) {
			var callbacks = _.hooks.all[name];

			if (!callbacks || !callbacks.length) {
				return;
			}

			for (var i=0, callback; callback = callbacks[i++];) {
				callback(env);
			}
		}
	}
};

var Token = _.Token = function(type, content, alias, matchedStr, greedy) {
	this.type = type;
	this.content = content;
	this.alias = alias;
	// Copy of the full string this token was created from
	this.length = (matchedStr || "").length|0;
	this.greedy = !!greedy;
};

Token.stringify = function(o, language, parent) {
	if (typeof o == 'string') {
		return o;
	}

	if (_.util.type(o) === 'Array') {
		return o.map(function(element) {
			return Token.stringify(element, language, o);
		}).join('');
	}

	var env = {
		type: o.type,
		content: Token.stringify(o.content, language, parent),
		tag: 'span',
		classes: ['token', o.type],
		attributes: {},
		language: language,
		parent: parent
	};

	if (o.alias) {
		var aliases = _.util.type(o.alias) === 'Array' ? o.alias : [o.alias];
		Array.prototype.push.apply(env.classes, aliases);
	}

	_.hooks.run('wrap', env);

	var attributes = Object.keys(env.attributes).map(function(name) {
		return name + '="' + (env.attributes[name] || '').replace(/"/g, '&quot;') + '"';
	}).join(' ');

	return '<' + env.tag + ' class="' + env.classes.join(' ') + '"' + (attributes ? ' ' + attributes : '') + '>' + env.content + '</' + env.tag + '>';

};

if (!_self.document) {
	if (!_self.addEventListener) {
		// in Node.js
		return _self.Prism;
	}

	if (!_.disableWorkerMessageHandler) {
		// In worker
		_self.addEventListener('message', function (evt) {
			var message = JSON.parse(evt.data),
				lang = message.language,
				code = message.code,
				immediateClose = message.immediateClose;

			_self.postMessage(_.highlight(code, _.languages[lang], lang));
			if (immediateClose) {
				_self.close();
			}
		}, false);
	}

	return _self.Prism;
}

//Get current script and highlight
var script = document.currentScript || [].slice.call(document.getElementsByTagName("script")).pop();

if (script) {
	_.filename = script.src;

	if (!_.manual && !script.hasAttribute('data-manual')) {
		if(document.readyState !== "loading") {
			if (window.requestAnimationFrame) {
				window.requestAnimationFrame(_.highlightAll);
			} else {
				window.setTimeout(_.highlightAll, 16);
			}
		}
		else {
			document.addEventListener('DOMContentLoaded', _.highlightAll);
		}
	}
}

return _self.Prism;

})();

if (typeof module !== 'undefined' && module.exports) {
	module.exports = Prism;
}

// hack for components to work correctly in node.js
if (typeof global !== 'undefined') {
	global.Prism = Prism;
}


/* **********************************************
     Begin prism-markup.js
********************************************** */

Prism.languages.markup = {
	'comment': /<!--[\s\S]*?-->/,
	'prolog': /<\?[\s\S]+?\?>/,
	'doctype': /<!DOCTYPE[\s\S]+?>/i,
	'cdata': /<!\[CDATA\[[\s\S]*?]]>/i,
	'tag': {
		pattern: /<\/?(?!\d)[^\s>\/=$<%]+(?:\s+[^\s>\/=]+(?:=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+))?)*\s*\/?>/i,
		greedy: true,
		inside: {
			'tag': {
				pattern: /^<\/?[^\s>\/]+/i,
				inside: {
					'punctuation': /^<\/?/,
					'namespace': /^[^\s>\/:]+:/
				}
			},
			'attr-value': {
				pattern: /=(?:("|')(?:\\[\s\S]|(?!\1)[^\\])*\1|[^\s'">=]+)/i,
				inside: {
					'punctuation': [
						/^=/,
						{
							pattern: /(^|[^\\])["']/,
							lookbehind: true
						}
					]
				}
			},
			'punctuation': /\/?>/,
			'attr-name': {
				pattern: /[^\s>\/]+/,
				inside: {
					'namespace': /^[^\s>\/:]+:/
				}
			}

		}
	},
	'entity': /&#?[\da-z]{1,8};/i
};

Prism.languages.markup['tag'].inside['attr-value'].inside['entity'] =
	Prism.languages.markup['entity'];

// Plugin to make entity title show the real entity, idea by Roman Komarov
Prism.hooks.add('wrap', function(env) {

	if (env.type === 'entity') {
		env.attributes['title'] = env.content.replace(/&amp;/, '&');
	}
});

Prism.languages.xml = Prism.languages.markup;
Prism.languages.html = Prism.languages.markup;
Prism.languages.mathml = Prism.languages.markup;
Prism.languages.svg = Prism.languages.markup;


/* **********************************************
     Begin prism-css.js
********************************************** */

Prism.languages.css = {
	'comment': /\/\*[\s\S]*?\*\//,
	'atrule': {
		pattern: /@[\w-]+?.*?(?:;|(?=\s*\{))/i,
		inside: {
			'rule': /@[\w-]+/
			// See rest below
		}
	},
	'url': /url\((?:(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1|.*?)\)/i,
	'selector': /[^{}\s][^{};]*?(?=\s*\{)/,
	'string': {
		pattern: /("|')(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
		greedy: true
	},
	'property': /[-_a-z\xA0-\uFFFF][-\w\xA0-\uFFFF]*(?=\s*:)/i,
	'important': /\B!important\b/i,
	'function': /[-a-z0-9]+(?=\()/i,
	'punctuation': /[(){};:]/
};

Prism.languages.css['atrule'].inside.rest = Prism.languages.css;

if (Prism.languages.markup) {
	Prism.languages.insertBefore('markup', 'tag', {
		'style': {
			pattern: /(<style[\s\S]*?>)[\s\S]*?(?=<\/style>)/i,
			lookbehind: true,
			inside: Prism.languages.css,
			alias: 'language-css',
			greedy: true
		}
	});

	Prism.languages.insertBefore('inside', 'attr-value', {
		'style-attr': {
			pattern: /\s*style=("|')(?:\\[\s\S]|(?!\1)[^\\])*\1/i,
			inside: {
				'attr-name': {
					pattern: /^\s*style/i,
					inside: Prism.languages.markup.tag.inside
				},
				'punctuation': /^\s*=\s*['"]|['"]\s*$/,
				'attr-value': {
					pattern: /.+/i,
					inside: Prism.languages.css
				}
			},
			alias: 'language-css'
		}
	}, Prism.languages.markup.tag);
}

/* **********************************************
     Begin prism-clike.js
********************************************** */

Prism.languages.clike = {
	'comment': [
		{
			pattern: /(^|[^\\])\/\*[\s\S]*?(?:\*\/|$)/,
			lookbehind: true
		},
		{
			pattern: /(^|[^\\:])\/\/.*/,
			lookbehind: true,
			greedy: true
		}
	],
	'string': {
		pattern: /(["'])(?:\\(?:\r\n|[\s\S])|(?!\1)[^\\\r\n])*\1/,
		greedy: true
	},
	'class-name': {
		pattern: /((?:\b(?:class|interface|extends|implements|trait|instanceof|new)\s+)|(?:catch\s+\())[\w.\\]+/i,
		lookbehind: true,
		inside: {
			punctuation: /[.\\]/
		}
	},
	'keyword': /\b(?:if|else|while|do|for|return|in|instanceof|function|new|try|throw|catch|finally|null|break|continue)\b/,
	'boolean': /\b(?:true|false)\b/,
	'function': /[a-z0-9_]+(?=\()/i,
	'number': /\b0x[\da-f]+\b|(?:\b\d+\.?\d*|\B\.\d+)(?:e[+-]?\d+)?/i,
	'operator': /--?|\+\+?|!=?=?|<=?|>=?|==?=?|&&?|\|\|?|\?|\*|\/|~|\^|%/,
	'punctuation': /[{}[\];(),.:]/
};


/* **********************************************
     Begin prism-javascript.js
********************************************** */

Prism.languages.javascript = Prism.languages.extend('clike', {
	'keyword': /\b(?:as|async|await|break|case|catch|class|const|continue|debugger|default|delete|do|else|enum|export|extends|finally|for|from|function|get|if|implements|import|in|instanceof|interface|let|new|null|of|package|private|protected|public|return|set|static|super|switch|this|throw|try|typeof|var|void|while|with|yield)\b/,
	'number': /\b(?:0[xX][\dA-Fa-f]+|0[bB][01]+|0[oO][0-7]+|NaN|Infinity)\b|(?:\b\d+\.?\d*|\B\.\d+)(?:[Ee][+-]?\d+)?/,
	// Allow for all non-ASCII characters (See http://stackoverflow.com/a/2008444)
	'function': /[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*\()/i,
	'operator': /-[-=]?|\+[+=]?|!=?=?|<<?=?|>>?>?=?|=(?:==?|>)?|&[&=]?|\|[|=]?|\*\*?=?|\/=?|~|\^=?|%=?|\?|\.{3}/
});

Prism.languages.insertBefore('javascript', 'keyword', {
	'regex': {
		pattern: /((?:^|[^$\w\xA0-\uFFFF."'\])\s])\s*)\/(\[[^\]\r\n]+]|\\.|[^/\\\[\r\n])+\/[gimyu]{0,5}(?=\s*($|[\r\n,.;})\]]))/,
		lookbehind: true,
		greedy: true
	},
	// This must be declared before keyword because we use "function" inside the look-forward
	'function-variable': {
		pattern: /[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*(?=\s*=\s*(?:function\b|(?:\([^()]*\)|[_$a-z\xA0-\uFFFF][$\w\xA0-\uFFFF]*)\s*=>))/i,
		alias: 'function'
	},
	'constant': /\b[A-Z][A-Z\d_]*\b/
});

Prism.languages.insertBefore('javascript', 'string', {
	'template-string': {
		pattern: /`(?:\\[\s\S]|\${[^}]+}|[^\\`])*`/,
		greedy: true,
		inside: {
			'interpolation': {
				pattern: /\${[^}]+}/,
				inside: {
					'interpolation-punctuation': {
						pattern: /^\${|}$/,
						alias: 'punctuation'
					},
					rest: null // See below
				}
			},
			'string': /[\s\S]+/
		}
	}
});
Prism.languages.javascript['template-string'].inside['interpolation'].inside.rest = Prism.languages.javascript;

if (Prism.languages.markup) {
	Prism.languages.insertBefore('markup', 'tag', {
		'script': {
			pattern: /(<script[\s\S]*?>)[\s\S]*?(?=<\/script>)/i,
			lookbehind: true,
			inside: Prism.languages.javascript,
			alias: 'language-javascript',
			greedy: true
		}
	});
}

Prism.languages.js = Prism.languages.javascript;


/* **********************************************
     Begin prism-file-highlight.js
********************************************** */

(function () {
	if (typeof self === 'undefined' || !self.Prism || !self.document || !document.querySelector) {
		return;
	}

	self.Prism.fileHighlight = function() {

		var Extensions = {
			'js': 'javascript',
			'py': 'python',
			'rb': 'ruby',
			'ps1': 'powershell',
			'psm1': 'powershell',
			'sh': 'bash',
			'bat': 'batch',
			'h': 'c',
			'tex': 'latex'
		};

		Array.prototype.slice.call(document.querySelectorAll('pre[data-src]')).forEach(function (pre) {
			var src = pre.getAttribute('data-src');

			var language, parent = pre;
			var lang = /\blang(?:uage)?-([\w-]+)\b/i;
			while (parent && !lang.test(parent.className)) {
				parent = parent.parentNode;
			}

			if (parent) {
				language = (pre.className.match(lang) || [, ''])[1];
			}

			if (!language) {
				var extension = (src.match(/\.(\w+)$/) || [, ''])[1];
				language = Extensions[extension] || extension;
			}

			var code = document.createElement('code');
			code.className = 'language-' + language;

			pre.textContent = '';

			code.textContent = 'Loading…';

			pre.appendChild(code);

			var xhr = new XMLHttpRequest();

			xhr.open('GET', src, true);

			xhr.onreadystatechange = function () {
				if (xhr.readyState == 4) {

					if (xhr.status < 400 && xhr.responseText) {
						code.textContent = xhr.responseText;

						Prism.highlightElement(code);
					}
					else if (xhr.status >= 400) {
						code.textContent = '✖ Error ' + xhr.status + ' while fetching file: ' + xhr.statusText;
					}
					else {
						code.textContent = '✖ Error: File does not exist or is empty';
					}
				}
			};

			xhr.send(null);
		});

		if (Prism.plugins.toolbar) {
			Prism.plugins.toolbar.registerButton('download-file', function (env) {
				var pre = env.element.parentNode;
				if (!pre || !/pre/i.test(pre.nodeName) || !pre.hasAttribute('data-src') || !pre.hasAttribute('data-download-link')) {
					return;
				}
				var src = pre.getAttribute('data-src');
				var a = document.createElement('a');
				a.textContent = pre.getAttribute('data-download-link-label') || 'Download';
				a.setAttribute('download', '');
				a.href = src;
				return a;
			});
		}

	};

	document.addEventListener('DOMContentLoaded', self.Prism.fileHighlight);

})();

/***/ })

}]);